/*
* Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description: 
*
*/


#ifndef __BLDPUBLIC_HRH
#define __BLDPUBLIC_HRH

#define LANGUAGE_IDS LANG sc 37 102 42 44 45 25 07 18 01 10 129 158 160 159 157 161 49 50 09 02 51 103 03 54 57 30 17 15 59 327 05 32 65 67 68 70 326 08 27 13 76 31 78 16 79 26 28 04 83 06 39 29 33 14 93 94 96 

/** #Camera 
Container for camera specific features
*/
#undef Camera                                             

/** #FF_3D_RINGING_TONES 
Device supports 3D ringing tones.
*/
#undef FF_3D_RINGING_TONES                                

/** #FF_3G_CELLBROADCAST 
Cell Broadcasting support on 3G mode.
*/
#undef FF_3G_CELLBROADCAST                                

/** #FF_ABC_AGRESSIVE_UI 
Display driver will provide an interface for switching Automatic Brightness
Control (ABC). More agressive Automatic Display Control (ABC) UI for display
driver will be in Settings display plug in, and as configurable for products,
but not neccessarily available for user. The agressive UI for ABC is
enabled/disabled by the feature flag.  
*/
#undef FF_ABC_AGRESSIVE_UI                                

/** #FF_ADAPTIVE_WLAN_SCANNING_SUPPORT 
Adaptive WLAN Scanning (AWS) is a component that tells WLAN engine how often to
perform WLAN background scanning. AWS listens and receives events from other
components, concludes what would be the preferred scanning period, and then
tells it to WLAN engine.
*/
#undef FF_ADAPTIVE_WLAN_SCANNING_SUPPORT                  

/** #FF_ADDITIONAL_FONTS 
This flag is to enable new font supports namely equivalents of Arial, Times New
Roman, Courier for content viewing mainly to be used in browser. If this flag is
not enabled it means it will continue to have only current fonts and no
additional font support.
*/
#define FF_ADDITIONAL_FONTS                                

/** #FF_AI_WLANSNIFFER_WIDGET 
Flag for WLANSniffer Homescreen widget.
*/
#undef FF_AI_WLANSNIFFER_WIDGET                           

/** #FF_ASYNCH_FILE_SAVE_QUEUE 
Camcorder requires support from the Asynchronous File Save Queue.
*/
#define FF_ASYNCH_FILE_SAVE_QUEUE                          

/** #FF_AT_COMMANDS_TEST_AUTOMATION 
Using FF_AT_COMMANDS_TEST_AUTOMATION will either include or exclude
atcmdplugin.dll from ROM
*/
#undef FF_AT_COMMANDS_TEST_AUTOMATION                     

/** #FF_AUDIO_MESSAGING_INCLUDE_IN_ROM 
This flags controls whether the Audio Messaing ROM files are included in the
build.
*/
#define FF_AUDIO_MESSAGING_INCLUDE_IN_ROM                  

/** #FF_AUDT 
Device supports Always Up-to-date Device Time (AUDT). This is an ability to
update the device time, date and country/city automatically in phone start-up.
*/
#undef FF_AUDT                                            

/** #FF_AUTO_REDIAL_FOR_VIDEO_CALL 
This flag indicates redial sequence, when video call is not succeeded for
certain reasons.
*/
#define FF_AUTO_REDIAL_FOR_VIDEO_CALL                      

/** #FF_AVKON_EMOTION_ICON_ENABLED 
to enable/disable the emotion icon support in avkon editor control
*/
#define FF_AVKON_EMOTION_ICON_ENABLED                      

/** #FF_BIRTHDAY_IMPROVEMENT 
This feature flag is required for the enabling/disabling customized birthday &
anniversary notifications for MyFaves contact in Calendar (under Community 1.0)
into 3.2.3 platform. 

The requirement is 

B’day & Anniversary Notification for MyFaves contact

•	Picture of the MyFaves contact in the popup which can be masked as circular

•	Currently Birthday notification is same as any other Calendar alarm

*/
#undef FF_BIRTHDAY_IMPROVEMENT                            

/** #FF_BLUETOOTH_DATA_PROFILES_DISABLED 
This flag is used to turn off bluetooth data profiles, and is to be used as part
of Enterprise Disabling of Bluetooth, allowing the device to use bluetooh for
hands free purposes only
*/
#undef FF_BLUETOOTH_DATA_PROFILES_DISABLED                

/** #FF_BLUETOOTH_DISABLED 
Flag used to disable all Bluetooth functionality in the device.  This will be
used for Enterprise Disabling of Bluetooth.  

This flag is required to be used instead of the __BT flag so that the Bluetooth
UI is still present after Bluetooth has been disabled, allowing the user to be
notified of why they cannot use it if they attempt to
*/
#undef FF_BLUETOOTH_DISABLED                              

/** #FF_BROWSER_PROGRESSIVE_DOWNLOAD 
This feature flag is needed to enable/disable the progressiveness of the
downloads in download manager server and its clients.
*/
#define FF_BROWSER_PROGRESSIVE_DOWNLOAD                    

/** #FF_CAL_MEETING_REQUEST_UI 
With this flag it is selected if Meeting Request UI included with flag
FF_MEETING_REQUEST_UI is available on Calendar side or not. If flag is not
defined MRUI is available only when MR Emails are opened from Email application.
If flag is defined then meeting requests can be opened also from Calendar
application and Calendar application will offer possibility to create new
meeting requests.
*/
#undef FF_CAL_MEETING_REQUEST_UI                          

/** #FF_CAPACITIVE_DISPLAY 
Device uses capacitive touch technology in its display.

*/
#define FF_CAPACITIVE_DISPLAY                              

/** #FF_CHINESE_FONTS_HIRES 
This flag controls whether Chinese variants use TrueType fonts instead of the
current stroke fonts in high resolution devices.

Current stroke fonts have good readability in small sizes and lower resolution
devices. However, with the introduction of ever sharper and larger displays
(HVGA, VGA), the stroke fonts look increasingly "too simple" and "stick-like" in
bigger sizes. Fonts with thicker, more stylistic strokes are required for a
proper look and user experience.

Following requirements already make a case for TTF fonts in Chinese:
417-16400: Chinese TrueType font for 9.1
406-137: TrueType font for Chinese

Note: The feature name intentionally avoids mentioning TrueType or TTF, as the
font technology is irrelevant, high resolution being the operative keywords.
*/
#undef FF_CHINESE_FONTS_HIRES                             

/** #FF_CHINESE_SELECTION_KEY 
Device uses this flag to differentiate if selection key existed
*/
#undef FF_CHINESE_SELECTION_KEY                           

/** #FF_CLOCK_MULTIPROCOL_SUPPORT 
This flag shall be used to determine if product programs need clock's
multiprotocol support, i.e. getting time information from different time source
protocols like GPS, SNTP, etc.. Product program can make a choice such that
multiprotocol feature support can be made on or off. When multiprotocol support
is off, then default NITZ protocol shall be choosen.
*/
#undef FF_CLOCK_MULTIPROCOL_SUPPORT                       

/** #FF_CMAIL_INTEGRATION 
5250+ specific features in Cmail are variated with this flag.
*/
#undef FF_CMAIL_INTEGRATION                               

/** #FF_COMMSDAT_CREATION_FROM_XML 
There will be a new component in S60 called CommsDatCreator (CDC) that will
initialize CommsDat using an input XML file which is generated by the
Configuration Tool.
When generating CommsDat the CDC needs that the default CommsDat in
Z:\private\10202be9\cccccc00.cre is empty. 
The requested flag FF_COMMSDAT_CREATION_FROM_XML  enables the empty CommsDat to
be included to the image as the default CommsDat.

*/
#undef FF_COMMSDAT_CREATION_FROM_XML                      

/** #FF_COMMSDAT_CREATOR 
This flags controls whether the CommsDatCreator component to be included to the
image.
*/
#define FF_COMMSDAT_CREATOR                                

/** #FF_CONNECTION_OVERRIDE 
The feature enables the better utilisation of the WLAN connections that the user
has manually opened from the WLAN widget. Such connections, called as 'user
connections', will be automatically utilised in all applications that would
normally use Internet SNAP connection. If the feature is enabled, the 'user
connection' is enforced by default. The user can still control the utilisation
of the 'user connection' by enabling/disabling the connection enforcement from
WLAN settings.
*/
#define FF_CONNECTION_OVERRIDE                             

/** #FF_CONTACTS_COMPANY_NAMES 
When enabled, contacts’ company names are shown after first+last name in
Phonebook Names list.
*/
#undef FF_CONTACTS_COMPANY_NAMES                          

/** #FF_CONTACTS_GROUP_FUNCTIONALITY 
We need a feature flag for ROM Creation time variation. The Phonebook2
application is constructed on a plugin based architecture. This design allows
the Phonebook2 application to be composed of various plugin components. The S60
platform Phonebook2 component contains a group UI plugin component, which
implements the whole contacts group functionality. To enable a variant to create
their own contact group functionality we need a feature flag so that the variant
can remove the platform group plugin component. This allow the component to be
removed from the ROM image, thus making the ROM size smaller.
*/
#define FF_CONTACTS_GROUP_FUNCTIONALITY                    

/** #FF_CONTACTS_MERGE 
If enabled, then phonebook UI contains the command for Merge.
*/
#define FF_CONTACTS_MERGE                                  

/** #FF_CONTACTS_MYCARD 
This feature flag controls whether phonebook application supports MyCard.
If flag is enabled:
- Phonebook has MyCard item at top of names list
- The user can open MyCard view from phonebook
- Other applications can launch the MyCard view 
*/
#define FF_CONTACTS_MYCARD                                 

/** #FF_CONTACTS_NICKNAME 
The nickname functionality needs a feature flag for the following reasons:
-Phonebook2 component exports a central repository initialization file, which is
used to improve the Phonebook application launch -The initialization file is
read by the Symbian Contacts model server to initialize the Contacts view during
the device boot sequence
 * S60 specifications define which fields take part in the device's contact name
creation (first name, last name, company name)
 * The nickname requirement changes the S60 name creation rules, by adding the
contacts nickname field to the above list of fields
 * Therefore the content of the Contacts view needs to be initialized
differently depending on whether the nickname feature is enabled or disabled
 * The initialization file contains the configuration of the view, e.g. the
contact fields which are used for sorting the Phonebook names list view
 * A feature flag is needed which allows Phonebook2 to export the correct
variant of the Contact view initilization file
 * There is a considerable RAM usage penalty associated with keeping the
nickname field in the contact view when the nickname feature is disabled
 * For further description of the Symbian Contacts view initilization see
\src\common\generic\app-engines\cntmodel\documentation\Contacts_How-To_Improve_Application_Start-up_Time.doc
-Run-time variation can be used inside the Phonebook2 application to configure
the application sort order
 * But the Symbian Contacts view's must be configured correctly in order to
maintain existing performance, see above description

*/
#undef FF_CONTACTS_NICKNAME                               

/** #FF_CONTACTS_PREDICTIVE_SEARCH 
When enabled, User can turn on/off Phonebook’s predictive search functionality,
using an item in Names list’s Option-menu.
*/
#undef FF_CONTACTS_PREDICTIVE_SEARCH                      

/** #FF_CONTACTS_REMOTE_LOOKUP 
When enabled, and a remote search service is installed in device, item “Search
remotely” is shown in Phonebook Names list.
*/
#define FF_CONTACTS_REMOTE_LOOKUP                          

/** #FF_CONTACTS_SOCIAL 
When flag is enabled, phonebook application has the following features:
- Names list shows social status texts
- Contact Card shows social status text & allows jumping to external social
application.
- MyCard shows social status text & allows jumping to external social
application.
- MyCard has button(s) that show(s) presence & allow jumping to external IM
application.

*/
#define FF_CONTACTS_SOCIAL                                 

/** #FF_CONTEXT_FRAMEWORK_V2 
This flag enables Context Framework version 2.
*/
#undef FF_CONTEXT_FRAMEWORK_V2                            

/** #FF_CONTEXT_PROFILES 
Context profiles enable the device to automatically adapt in users every day
life and combine current Profiles functionality with concepted and studied
Situations functionality. If the flag sets to true, context profiles are
enabled. If flase, otherwises.

*/
#undef FF_CONTEXT_PROFILES                                

/** #FF_CUSTOMER_HELPS_IN_USE 
Customer helps are included into image based on this flag.
*/
#undef FF_CUSTOMER_HELPS_IN_USE                           

/** #FF_DEVICE_DIAGNOSTICS_APP 
On enabling this feature flag GSDevDiagPlugin.dll would start the
DevDiagApp.exe. This would load all related plugins. The Diagnostics application
offers self-test service on the Mobile Applications and hardware for the phone
users.
*/
#define FF_DEVICE_DIAGNOSTICS_APP                          

/** #FF_DEVICE_ENCRYPTION_FEATURE 
This flag is required for Device Encryption feature which goes to Symbian
Foundation. The existing flag (FF_NATIVE_FILE_ENCRYPTION) will exclusively be
used by NFE, which doesn't go to SF. Hence a different flag is required for all
those middleware and application layer components of DE.
*/
#define FF_DEVICE_ENCRYPTION_FEATURE                       

/** #FF_DISABLE_OMA_SUPL_V2 
When this flag is ON SUPL v2.0 is NOT supported. Note that this flag is a
negative flag in order to minimize the risk for the master code line.
*/
#undef FF_DISABLE_OMA_SUPL_V2                             

/** #FF_DM_BROWSER_ADAPTER 
Browser adaper is used by Device Management to Set/Get the browser settings from
the operator server. This feature is requested by CMCC. The feature flag is used
to differentiate between Nokia Specific implemenation and OMA DM implementation.
*/
#define FF_DM_BROWSER_ADAPTER                              

/** #FF_DM_CONNMO_ADAPTER 
OMA Device Management Connectivity Managment Object (ConnMO) provides management
of connectivity settings. This flag will help in enabling ConnMO plugin.
*/
#undef FF_DM_CONNMO_ADAPTER                               

/** #FF_DM_INSTALL_SECURITY 
OMA DM SW installer implementation included in build.
*/
#undef FF_DM_INSTALL_SECURITY                             

/** #FF_DM_STREAMING_ADAPTER 
Streaming adapter is used by Device Mangement to Set/Get the streaming settings
from the operator server. CMCC has requested support for this new adapter. This
feature flag is used to differentiate the Nokia specfic implementation and OMA
DM implementation.
*/
#define FF_DM_STREAMING_ADAPTER                            

/** #FF_DUAL_LANGUAGE_SUPPORT 
This Flag is used to develop support for dual language feature. This is an
enhancement to the basic prediction feature where words predicted will come from
2 different language databases.
*/
#undef FF_DUAL_LANGUAGE_SUPPORT                           

/** #FF_DUAL_MODEM 
Flag for developing Dual Modem feature
*/
#undef FF_DUAL_MODEM                                      

/** #FF_EMAIL_FRAMEWORK 
Defines whether the product includes the email multiprotocol framework. When the
flag is defined all parts constituting new email solution are in ROM:
application, plugin framework + imap/pop plugin and related settings UIs. 

legacy email (__EMAIL_UI) must be disabled when FF_EMAIL_FRAMEWORK is enabled.
*/
#define FF_EMAIL_FRAMEWORK                                 

/** #FF_EMAIL_IPS_SERVICES 
Defines whether the product includes IMAP4, POP3 and SMTP protocol support.
*/
#undef FF_EMAIL_IPS_SERVICES                              

/** #FF_EMAIL_MCE_INTEGRATION 
This enables email client selection in MCE. Fex. Freestyle email mailboxes  goes
under email folder in mce-serttings. mce and sendui. Freestyle email settings
can be changed from mce-settings.
 All you need to do is install own mtm-plugin and configure central repository
key.

*/
#define FF_EMAIL_MCE_INTEGRATION                           

/** #FF_EMAIL_PROTOCOL_PLUGINS 
When defined, default email protocol plugins are enabled.
*/
#define FF_EMAIL_PROTOCOL_PLUGINS                          

/** #FF_EMAIL_UI 
Defines whether the product includes email UI application
*/
#undef FF_EMAIL_UI                                        

/** #FF_EMPTY_COMMSDAT 
The override flags FF_EMPTY_COMMSDAT, FF_VANILLA_COMMSDAT and FF_RND_COMMSDAT
determine which default CommsDat will be put to the image independent of image
type (prd or rnd):

- FF_EMPTY_COMMSDAT: Completely empty CommsDat is used. Typically needed as the
base when creating operator variants with Configuration Tool and
CommsDatCreator. Same as old FF_COMMSDAT_GENERATION_FROM_XML.

- FF_VANILLA_COMMSDAT: Otherwise empty CommsDat but the S60 default destinations
(Internet, MMS and Operator) as well as the Easy WLAN IAP (in case of WLAN
product) is included. This is suitable for vanilla variants of the phones.

- FF_RND_COMMSDAT: Platform releases contain typically the RND CommsDat that has
Nokia Test Network IAPs as well as some Finnish operator IAPs (DNA, Sonera,
Elisa) for RnD purposes.

Maximum of one of these flags should be defined at the time. 

If none of the override flags is defined then the used CommsDat depends on the
image type: vanilla CommsDat is used for PRD image and RnD CommsDat for the RnD
image. This is typically how it should be and the override flags should only be
used if some special functionality is needed.

*/
#undef FF_EMPTY_COMMSDAT                                  

/** #FF_ENABLE_ISI_COMMUNICATION_IN_USB_CHARGING_MODE 
Feature info adaptation will read the PP-bit value from ISA info server and map
the value of PP bit into KFeatureIdCertTesting. SSM then will read
KFeatureIdCertificationTesting and if system is in USB charging mode , then
start USB components into the mode where ISI communication is possible.
*/
#undef FF_ENABLE_ISI_COMMUNICATION_IN_USB_CHARGING_MODE   

/** #FF_ENHANCED_CALENDAR_EVENT_UI 
This flag controls inclusion of enhanced Calendar Event Viewers and Editors that
replace standard ones and provide consistent look and feel with Meeting Request
UI included with flag FF_MEETING_REQUEST_UI.
*/
#undef FF_ENHANCED_CALENDAR_EVENT_UI                      

/** #FF_FARSI_CALENDAR 
S60 calendar should provide possibility to integrate Farsi calendar application
to S60 calendar.

 S60 calendar should provide variation point to calendar main menu, from where
Farsi calendar application can be launched. In addition S60 calendar setting
should provide access to the Farsi calendar settings. User should comfortably
move btwn Gregorian and Farsi calendars. 

Farsi calendar will be enabled in the variants English & Farsi. These variants
can be extended further as per the need. 

This feature is approved and targeted for 3.2.3 products. So variation required
from 3.2.3 onwards. 
*/
#undef FF_FARSI_CALENDAR                                  

/** #FF_FLASHLITE_SCREENSAVER 
When enabled/defined flash can be used as Screensaver.
*/
#undef FF_FLASHLITE_SCREENSAVER                           

/** #FF_FMTX 
FMTX application and Nseries Music Player support for FMTX
*/
#define FF_FMTX                                            

/** #FF_FMTX_RDS_TEXT 
Flag to enable RDS text transmission through FM transmitter (FMTX). Runtime
variation needed in SysAp. FMTX UI SW uses this flag in .iby files so it is not
runtime variated in UI SW.

RDS text transmission not enabled currently (ELZG-7PE3G9) 
*/
#undef FF_FMTX_RDS_TEXT                                   

/** #FF_FULLSCR_HWR_INPUT 
Indicates whether a device needs fullscreen HWR (HandWritingRecognition) input
or not.
*/
#undef FF_FULLSCR_HWR_INPUT                               

/** #FF_GENERIC_ACCESS_NETWORK 
Generic Access Network (GAN), previously known as Unlicensed Mobile Access (UMA)
technology provides access to GSM/3G and GPRS mobile services over unlicensed
spectrum technologies. By deploying GAN technology, service providers can enable
subscribers to roam and handover between cellular networks and public and
private unlicensed wireless networks using dual-mode mobile handsets. However
GAN needed some platform changes to be fully functional and those changes must
be run time variable.
*/
#undef FF_GENERIC_ACCESS_NETWORK                          

/** #FF_GENERIC_FONTS_ASSETS 
This flag is used to check if generic font assets are to be used, this is used
for Symbian foundation where freetype rasterize as well as EFF fonts need to be
used.
*/
#undef FF_GENERIC_FONTS_ASSETS                            

/** #FF_HDMI 
Feature flag to indicate HDMI availability.  IIf defined, device supports HDMI
(High Definition Multimedia Interface)
*/
#undef FF_HDMI                                            

/** #FF_HELP_TUTORIAL_MERGE 
The end-user shall be provided with animated help (tutorial kontent) from CSX
Help application. Both applications will continua existing as separate
applications, though Tutorial will not be visible in application grid, but only
provide animated content for CSX Help.

This is for REQ 417-16797. Help & Tutorial will look like one application. User
will not feel that they are 2 different applications. To implement this REQ
without breaking the compatibility, one feature flag is needed to make Help &
Toturial applications know if Tutorial is embedded in Help or running as a
standalone application. Also refer to REQ 101-39505.
*/
#undef FF_HELP_TUTORIAL_MERGE                             

/** #FF_HIJRI_CALENDAR 
S60 calendar should provide possibility to integrate separate Hijri calendar
application to S60 calendar.

S60 calendar should provide variation point to calendar main menu, from where
Hijri calendar application can be launched. In addition S60 calendar setting
should provide access to the Hijri calendar settings. User should comfortably
move btwn Gregorian and Hijri calendars.

Hijri calendar will be enabled in the variants English, Arabic, Urdu , French &
Farsi. These variants can be extended further as per the need. 

This feature is approved and targeted for 3.2.3 products. So variation required
from 3.2.3 onwards.

*/
#undef FF_HIJRI_CALENDAR                                  

/** #FF_HITCHCOCK_APP_SHELL 
"Feature flag 'FF_HITCHCOCK_MENU' to control which AppShell menu to use. If
disabled, old xml based menu2, and if enabled, new hitchcock based menu3."
*/
#undef FF_HITCHCOCK_APP_SHELL                             

/** #FF_HOMESCREEN_COMMON_IDLEFW 
Feature flag for enabling common idle framework to support new widgetized
stand-by mode application of Active Idle 3 on S60 by REQ "101-40598: HomeScreen:
3rd Party widget support" as alternative of existing Active Idle 2 and yet
enabling even custom made stand-by mode app to be active. The binary objects
which comprise common idle framework related components and new active stand-by
application, selection of alternative,  and its depended components, can be
selected at image creation time in case where common ilde fw is accepted by
product/variant decicion.
*/
#define FF_HOMESCREEN_COMMON_IDLEFW                        

/** #FF_HOMESCREEN_OPEN_MENUFW 
Feature flag for activation of open menu framework to support alternative main
menu applications on S60 by REQS "101-40417: Open Shell UI internal menu model
for other applications", "417-8821: Non-touch VGA support for Matrix" and
"404-3950: Matrix: Basic Menu". Existing main menu app, Hitchcock AppShell, can
still be used if product/variant decides so, however, open menu fw which enables
altenative menu applications to run on same content, can be chosen as well. The
binary objects which comprise open menu fw and active main menu application with
its depended components can be selected at image creation time, as well as it is
possible to request appropriate main menu application UID when needed to
configure S60. These requests are, for example, setting the application UID to
launch main menu by "applications" hw-key and hide menu application from itself
etc. 
*/
#define FF_HOMESCREEN_OPEN_MENUFW                          

/** #FF_HOMESCREEN_SWITCHABLE_ROOT 
Homescreen root configuration replaces existing concept of Active Idle
themes/modes from S60 5.1. FF_HOMESCREEN_SWITCHABLE_ROOT variates S60 by
enabling/disabling possibility to switch homescreen root. Homescreen root switch
must be enabled to end user to select operator/product  specific alternative
homescreen active, for example, an alternative root or External Homescreen. This
feature must be able to set at run time also for post-product provision of
alternative homescreen.
*/
#undef FF_HOMESCREEN_SWITCHABLE_ROOT                      

/** #FF_IAUPDATE 
If defined, the phone supports Independent Application Update feature.
*/
#define FF_IAUPDATE                                        

/** #FF_IAUPDATE_PHASE2 
Flag to control whether phone's Independent Application Update feature,
controlled by FF_IAUPDATE, is version two or later, a.k.a. IAD client phase 2.
*/
#define FF_IAUPDATE_PHASE2                                 

/** #FF_IMAGEPRINT_BT_PROTOCOL 
Flag to control whether ImagePrint supports Bluetooth-printing
*/
#define FF_IMAGEPRINT_BT_PROTOCOL                          

/** #FF_IMAGEPRINT_MEMORYCARD_PROTOCOL 
Flag to define whether ImagePrint supports printing to memorycard
*/
#define FF_IMAGEPRINT_MEMORYCARD_PROTOCOL                  

/** #FF_IMAGEPRINT_PICTBRIDGE_PROTOCOL 
Flag to define whether ImagePrint supports PictBridge printing - meaning
printing over USB.
*/
#define FF_IMAGEPRINT_PICTBRIDGE_PROTOCOL                  

/** #FF_IMAGEPRINT_UPNP_PROTOCOL 
Flag to define whether ImagePrint supports UPnP printing
*/
#define FF_IMAGEPRINT_UPNP_PROTOCOL                        

/** #FF_INCLUDE_CHINESE_DICTIONARY 
This feature flag  controls the inclusion/exclusion of chinese dictionary in
chinese variants. The flag is used in dictionary_variant.iby

*/
#undef FF_INCLUDE_CHINESE_DICTIONARY                      

/** #FF_INPUTS_PER_ORIENTATION 
the feature is implemented to adjust dynamically available input methods
according to autorotation status. 
when autorotation is ON, if orientation is landscape, show menu items exclude
"virtual ITU-T" and virtual ITU-T is also unavailabe, else if orientation is
portrait show menu items exclude "FSQ" and FSQ is also unavailabe.

*/
#undef FF_INPUTS_PER_ORIENTATION                          

/** #FF_INTELLIGENT_TEXT_INPUT 
Generic QWERTY framework and 2nd generation text input engine integration
*/
#undef FF_INTELLIGENT_TEXT_INPUT                          

/** #FF_ITI_VIRTUAL_TOUCH_FIRST_GENERATION_SUPPORT 
ITI feature (2nd generation text input features) are enabled in 5.0 & 9.1 TBD,
i.e MCL, but these features are not supported in touch input modes like Virtual
ITU-T, VKB & FSQ. Hence, to support 1st generation features to touch input
methods, this flag is required.

*/
#undef FF_ITI_VIRTUAL_TOUCH_FIRST_GENERATION_SUPPORT      

/** #FF_JAVA_GLOBAL_INDICATORS_API 
Enables Java Global Indicator API. Global Indicator API can be used to add
indicators to phone status pane.
*/
#undef FF_JAVA_GLOBAL_INDICATORS_API                      

/** #FF_KEYPAD_NO_SEND_KEY 
Device does not have a send key to activate phone call.
*/
#undef FF_KEYPAD_NO_SEND_KEY                              

/** #FF_LAYOUT_360_640_NONTOUCH 
New non touch NHD (=QHD) resolution. Flag determine which layout dlls are put to
hw image. 
*/
#undef FF_LAYOUT_360_640_NONTOUCH                         

/** #FF_LAYOUT_360_640_TOUCH_NHD4 
layout for nhd4
*/
#undef FF_LAYOUT_360_640_TOUCH_NHD4                       

/** #FF_LAYOUT_360_640_TOUCH_QHD2 
Layout data for QHD2_TOUCH resolution.
*/
#undef FF_LAYOUT_360_640_TOUCH_QHD2                       

/** #FF_LAYOUT_480_640_TOUCH_VGA4 
layout for vga4
*/
#undef FF_LAYOUT_480_640_TOUCH_VGA4                       

/** #FF_LAYOUT_480_640_VGA3 
Layout data for VGA3 resolution.
*/
#undef FF_LAYOUT_480_640_VGA3                             

/** #FF_LAYOUT_640_360_NONTOUCH 
New non touch NHD (=QHD) resolution.  Flag determine which layout dlls are put
to hw image.

*/
#undef FF_LAYOUT_640_360_NONTOUCH                         

/** #FF_LAYOUT_640_360_TOUCH_NHD4 
layout for nhd4
*/
#undef FF_LAYOUT_640_360_TOUCH_NHD4                       

/** #FF_LAYOUT_640_360_TOUCH_QHD2 
Layout data for QHD2 TOUCH resolution.
*/
#undef FF_LAYOUT_640_360_TOUCH_QHD2                       

/** #FF_LAYOUT_640_480_TOUCH_VGA4 
layout for vga4 landscape
*/
#undef FF_LAYOUT_640_480_TOUCH_VGA4                       

/** #FF_LAYOUT_640_480_VGA3 
Layout data for VGA3 resolution.
*/
#undef FF_LAYOUT_640_480_VGA3                             

/** #FF_LBT_ENGINE 
To enable/disable LBT engine from S60. By default this should be ON
The Location Triggering subsystem provides a service to applications for
notifications based on the user’s location. Applications can create and remove
location based triggers, and applications can be notified or started when one of
their triggers is fired, i.e. the triggering conditions are met
Feature wiki : https://s60wiki.nokia.com/S60Wiki/Location_based_triggering
REQ: 101-34742
BREL : 405-1756
*/
#define FF_LBT_ENGINE                                      

/** #FF_LBT_EVENTSUI 
To enable EventsUi application. Default is ON
Location events  help the users to create location-based reminders. It allows
the user to create a event and assign a location to it.  When you get close by
to the location, it prompts you with a reminder by playing a alarm tone or
displaying a text note or voice note assigned to that event.
REQ : 403-1621
BREl : 405-1781
*/
#define FF_LBT_EVENTSUI                                    

/** #FF_LBT_MGTUI 
To enable/disable the LBT management UI. Default is On
Settings for Location based trigerring subsystem.
REQ : 403-1621
BREl : 405-1781
*/
#define FF_LBT_MGTUI                                       

/** #FF_LIMITED_MESSAGE_AND_ALARM_TONE_SIZE 
When this flag is on the message alert tones and alarm (calendar, clock) tones
maximum size is defined by cenrep key KProEngRingingToneMaxSize
*/
#undef FF_LIMITED_MESSAGE_AND_ALARM_TONE_SIZE             

/** #FF_LINKED_FONTS_CHINESE 
For enabling linked font in Chinese a new feature flag FF_LINKED_FONTS_CHINESE
is needed.
This flag controls whether a single Chinese font or a linked font is used in
Chinese builds. The linked font will contain latin set from normal S60 latin
fonts and a Chinese part which is the current Chinese font unchanged. To be used
in Chinese variants only.
*/
#undef FF_LINKED_FONTS_CHINESE                            

/** #FF_LIVETV 
support for DVBH live tv 1.1 (using bluetooth accessory SU-33W)
*/
#undef FF_LIVETV                                          

/** #FF_LOCATION_MW_APE_CENTRIC_ARCH_SUPPORT 
S60 Location FW and its related components are going to change to support APE
Centric architecture. In order to toggle architecture support between new and
old,we have introduced this flag. If this flag is ON, then new architecture will
get into use. If its OFF then old architecure will get into use.
*/
#undef FF_LOCATION_MW_APE_CENTRIC_ARCH_SUPPORT            

/** #FF_MDS_CAMERA_SUPPORT 
Enables camera application support for Metadata system.
*/
#define FF_MDS_CAMERA_SUPPORT                              

/** #FF_MECO_XMPP 
XMPP is an Instant Messaging Protocol. MECO (MEssaging COnvergence)
implementation of XMPP is disabled by the use of this flag. This is to be used
for run-time purposes. If this flag is false, then the functionality covered by
this flag cannot be used although the library itself exists.

*/
#undef FF_MECO_XMPP                                       

/** #FF_MEETING_REQUEST_UI 
Meeting request UI from Custom SW will be is part of Common Email. This new flag
replaces Custom SW specific flag FF_ES_MEETING_REQUEST_UI used in Freestyle. MR
UI (viewer) is visible to Email application as Ecom plugin.

If the flag is not defined, MR UI related components are not in ROM.
*/
#undef FF_MEETING_REQUEST_UI                              

/** #FF_MENU_TEXTURE_PRELOADING 
In Menu (AppShell) application the performance of changing the folder has been
poor in 5.0 (uses Hitchcock). By loading the Hitchcock textures for all the
icons in advance improves the performance radically. The side effect is the
increased memory consumption. This flag enables/disables the texture
pre-loading.
*/
#undef FF_MENU_TEXTURE_PRELOADING                         

/** #FF_MMS_POSTCARD_INCLUDE_IN_ROM 
This flags controls whether the MMS Postcard ROM files are included in the
build.
*/
#undef FF_MMS_POSTCARD_INCLUDE_IN_ROM                     

/** #FF_MPX_VIDEO_PLAYER 
When this flag is on, MPX framework in platform supports video playback and
mpxvideoplayer.exe is included in ROM. Platform's default video player is
mpxvideoplayer.exe. This flag can be used at build time, if necessary, to decide
if code can be build against services provided by MPX video player instead of
libraries provided by Media Player and Video Center, which both are replaced by
MPX Video Player.
*/
#define FF_MPX_VIDEO_PLAYER                                

/** #FF_MTP_CONTROLLER 
The feature enables device to support MTP Controller service
*/
#define FF_MTP_CONTROLLER                                  

/** #FF_NCD_ENGINE 
This flag enables building the NCD Engine to S60 release.
*/
#define FF_NCD_ENGINE                                      

/** #FF_NCD_UI 
This flag enables building the NCD UI to S60 release.
*/
#define FF_NCD_UI                                          

/** #FF_NEAR_FIELD_COMMUNICATION 
A feature flag for Near Field Communication feature
*/
#undef FF_NEAR_FIELD_COMMUNICATION                        

/** #FF_NLT_SUPPORT 
This enables National Language Table(NLT) support for encoding SMS messages.
Characters specific to a language must be encoded using the corresponding NLT,
so that the message can be sent and received using a 7-bit alphabet without any
loss of information. The method is specified in 3GPP TS 23.038 v8.0.0 and TS
23.040 v8.1.0. 
*/
#undef FF_NLT_SUPPORT                                     

/** #FF_NO_CUG_SUPPORT 
Allow removal of CUG (Closed User Group) feature from Phone and SIM settings
list (in Control Panel) in cases where CUG is not supported.
*/
#undef FF_NO_CUG_SUPPORT                                  

/** #FF_NO_IDLE_SOFTKEYS 
When the flag is set, Active Idle does not have any softkeys.

*/
#undef FF_NO_IDLE_SOFTKEYS                                

/** #FF_ODE_COPYRIGHT_NOTICE 
This feature adds ODE physics engine copyright info to About application. The
notice is needed if any of the sw components which using this engine.
Configurability is required to add the copyright information, because the notice
should only displayed when required( e.g., in some products which include it ),
we will decide whether displaying these copyright information by swtich on/off
of this flag. 
*/
#undef FF_ODE_COPYRIGHT_NOTICE                            

/** #FF_OFN_FEATURE 
OFN feature stands for Optical Finger Navigation, a feature of input devices
with optical sensor. Typically phones with the OFN feature contain an optical
joystick, which is an addition to normal rocker navikey user input. Optical
joystick is utilized for various user input functionalities in menus, lists,
browser, maps, image viewer, etc. The optical joystick can be enabled/disabled
by switching the boolean flag defined/undefined. 

*/
#undef FF_OFN_FEATURE                                     

/** #FF_OMA_SCOMO_ADAPTER 
This feature enables OMA SCOMO feature in "application management component".

*/
#define FF_OMA_SCOMO_ADAPTER                               

/** #FF_OOM_MONITOR2_COMPONENT 
Feature flag for controlling the inclusion of Out-of-Memory2 component into the
ROM image.

*/
#undef FF_OOM_MONITOR2_COMPONENT                          

/** #FF_OSS_LEGAL_NOTICE 
This feature adds OSS legal notice to About application. The notice is needed if
any of the sw components, e.g. WRT widgets include any Open Source components. 

Configurability is required to add the legal notice, because the notice should
only displayed when required( e.g., in some products ), we will decide whether
displaying these information by swtich on/off of this flag.

 

*/
#undef FF_OSS_LEGAL_NOTICE                                

/** #FF_PLATFORM_SIMULATOR 
Platform Simulator product makes it possible to execute software on simulated
target hardware using a Windows or Linux workstation. Platform Simulator is
based on ARM® RealView® tools that support modeling terminal hardware using LISA
language. Platform Simulator runs any OS e.g. S60 or Linux. The OS is introduced
to the simulator as a core image loaded into the simulated flash memory. 

Compared to WINS emulator Platform Simulator based S60 simulation is much closer
to exeuction on real hardware. Yet there has to be some differences in the S60
core image. Thus the need for FF_PLATFORM_SIMULATOR flag. The flag  controls S60
PPD release based core image creation for two alternate targets: 
 - FLAG DEFINED = compilation shall include components and configurations for
simulated hardware
 - FLAG UNDEFINED = compilation shall include components and configurations for
real hardware
 
The NCP_COMMON_PLATFORM_SIMULATOR flag has strict dependency to the
FF_PLATFORM_SIMULATOR flag.

Platform Simulator pilot 1 release models PP71 hardware i.e. a plain RAPU 1.1
configuration. In the future the Platform Simulator targets to support selected
new reference hardware configurations. This makes the flag lifetime permanent.
*/
#undef FF_PLATFORM_SIMULATOR                              

/** #FF_PNPMS_PROV_FILTER 
On enabling this feature flag pnpprovfilter.dll will be created and this feature
flag is used to enable PNPProvisioning HTTP filter which by passes the download
manager launching PNPMS provisioning engine.
*/
#undef FF_PNPMS_PROV_FILTER                               

/** #FF_PNPMS_SERVICE_HELP_PLUGIN 
This feature flag is required for launching PNPMS application from general
settings/Control Panel. On enabling this feature flag servicehelpplugin.dll will
be created and when this feature is enabled Service Help Icon will be present in
General Settings/Control Panel. Service Help will launch browser on selection
and direct the browser with predefined PnPMS server URL where user can download
provisioning settings over HTTP from web server.
*/
#undef FF_PNPMS_SERVICE_HELP_PLUGIN                       

/** #FF_POWER_SAVE 
"Power save mode is a collection of features which are put in a power saving
mode. These features are i.e. display light brightness, light time outs etc.
Power save mode can be extended to be supported by any application which can do
something to save battery by implementing the needed power save mode APIs."
*/
#define FF_POWER_SAVE                                      

/** #FF_PREMINET_CATALOGS_CLIENT 
Preminet Catalogs client.
*/
#undef FF_PREMINET_CATALOGS_CLIENT                        

/** #FF_PROV_AUTHTYPE_PLUGIN 
This flag enables Authentication type plugin. On enabling this feature flag
Authtypeplugin.dll will be created and this feature will be enabled and
authetication type can be changed for configuration message from UI which will
enable item in General Settings and on selection of this item will open list
dialog for changing the authentication type.
*/
#undef FF_PROV_AUTHTYPE_PLUGIN                            

/** #FF_QT 
Generic feature flag for for QT based features (to be used in image creation and
run-time variation)
*/
#undef FF_QT                                              

/** #FF_QWERTY_FN_KEY 
The device has a Fn key
*/
#undef FF_QWERTY_FN_KEY                                   

/** #FF_RFSUICON_ERASE_ALL_DATA 
This feature flag is required to either enable or disable the display of “Erase
all data” icon (deep RFS) in S60 UI menu. Using this feature flag the
functioanlity can either be totally enabled or disabled. Not all devices may
require this feature and hence it needs to be configurable.

*/
#undef FF_RFSUICON_ERASE_ALL_DATA                         

/** #FF_RND_COMMSDAT 
The override flags FF_EMPTY_COMMSDAT, FF_VANILLA_COMMSDAT and FF_RND_COMMSDAT
determine which default CommsDat will be put to the image independent of image
type (prd or rnd):

- FF_EMPTY_COMMSDAT: Completely empty CommsDat is used. Typically needed as the
base when creating operator variants with Configuration Tool and
CommsDatCreator. Same as old FF_COMMSDAT_GENERATION_FROM_XML.

- FF_VANILLA_COMMSDAT: Otherwise empty CommsDat but the S60 default destinations
(Internet, MMS and Operator) as well as the Easy WLAN IAP (in case of WLAN
product) is included. This is suitable for vanilla variants of the phones.

- FF_RND_COMMSDAT: Platform releases contain typically the RND CommsDat that has
Nokia Test Network IAPs as well as some Finnish operator IAPs (DNA, Sonera,
Elisa) for RnD purposes.

Maximum of one of these flags should be defined at the time. 

If none of the override flags is defined then the used CommsDat depends on the
image type: vanilla CommsDat is used for PRD image and RnD CommsDat for the RnD
image. This is typically how it should be and the override flags should only be
used if some special functionality is needed.

*/
#undef FF_RND_COMMSDAT                                    

/** #FF_ROCKER_KEY 
The device has multidirectional "rocker" key.

*/
#define FF_ROCKER_KEY                                      

/** #FF_ROM_INCLUDE_ALF 
This flags controls whether the UI Accelerator toolkit (ALF) is included in the
build.
*/
#define FF_ROM_INCLUDE_ALF                                 

/** #FF_RUNTIME_DEVICE_CAPABILITY_CONFIGURATION 
To enable the feature to variate the device capability on runtime
*/
#define FF_RUNTIME_DEVICE_CAPABILITY_CONFIGURATION         

/** #FF_S60_HELPS_IN_USE 
Platform helps are included into image based on this flag.
*/
#define FF_S60_HELPS_IN_USE                                

/** #FF_S60_POSTING_IMPLEMENTATION_IN_USE 
Flag to enable/disable usage of S60 implementation of posting surface api.
Default value for this is disabled.
*/
#undef FF_S60_POSTING_IMPLEMENTATION_IN_USE               

/** #FF_SELECTABLE_EMAIL 
This enables selectable default email. When write message->email is selected
from sendui (with multible mailboxes), the default email account is the initial
selection. Default mailbox can be set from mce-settings.
*/
#define FF_SELECTABLE_EMAIL                                

/** #FF_SENSOR_FW 
FF_SENSOR_FW flag is used for image creation time variation of the sensor
framework. 
Flag should be defined for products that have sensors and undefined for products
that do not.
*/
#define FF_SENSOR_FW                                       

/** #FF_SHOW_MMPLAYER 
By default S60 Media Player will be hidden from UI, and  only be accessible
through embedded playback use cases (e.g browser, messaging, file browser, etc).

This flag will will allow product manufacturers to re-enable Media Player and
display it in the application shell if desired.  

*/
#undef FF_SHOW_MMPLAYER                                   

/** #FF_SIP_CUSTOM_PDP_HANDLING 
Controls the handling of PDP activation failures in operator specified method
*/
#undef FF_SIP_CUSTOM_PDP_HANDLING                         

/** #FF_SMALL_SCREEN_TOUCH 
for small physical screen but big resolution and touch(for example 2.4" vga
touch)
*/
#undef FF_SMALL_SCREEN_TOUCH                              

/** #FF_STARTUP_OMA_DM_SUPPORT 
The flag will be used to enable receiving OMA CP/DM messages during system
start-up in those devices that need the feature.
*/
#undef FF_STARTUP_OMA_DM_SUPPORT                          

/** #FF_STROKE_INPUTMODE_IN_TAIWAN 
The flag to switch stroke input mode in taiwan language. This flag is introduced
from 9.2
*/
#undef FF_STROKE_INPUTMODE_IN_TAIWAN                      

/** #FF_SUPL_IMSI_GENERATED_SERVER_PRIORITY_DEFAULT 
When this flag is enabled IMSI based autogenerated SUPL server has higher
priority on the SUPL server list than the hard coded servers from startup
settings DB
*/
#undef FF_SUPL_IMSI_GENERATED_SERVER_PRIORITY_DEFAULT     

/** #FF_SYNCML_STATUS_EXTENDED_ERROR_CODES 
When this flag is ON it is possible to write extended syncml error codes to sync
log
*/
#undef FF_SYNCML_STATUS_EXTENDED_ERROR_CODES              

/** #FF_TACTICONS 
Tacticons are haptic effects that can be played by the applications to indicate
success or failure of actions. Tacticons can be also automatically played
together with some Sound IDs.

*/
#define FF_TACTICONS                                       

/** #FF_TACTILE_FEEDBACK 
Device supports Tactile Feedback. Tactile feedback is produced by UI components
and applications on pointer down events. Actual physical feedback effect
(vibra/audio/no feedback) depends on current settings and device configuration.
*/
#define FF_TACTILE_FEEDBACK                                

/** #FF_TARM_CAPABILITY_BASED_ACCESS 
This is the feature flag to allow branching of the code flow based on the
capability check or SID check for the third party applications.
*/
#define FF_TARM_CAPABILITY_BASED_ACCESS                    

/** #FF_TARM_CAPABILITY_CHECKING 
This is a feature flag to decide the code flow base on either the Application
capability check or the SID check in case of third party applications
*/
#undef FF_TARM_CAPABILITY_CHECKING                        

/** #FF_TCP_MYFAVES_FEATURE 
The feature flag is to turn ON/OFF MyFaves feature in a S60 3.2 complementary
package.
*/
#undef FF_TCP_MYFAVES_FEATURE                             

/** #FF_TCP_MYPROFILE 
This feature flag is for enabling/disabling MyProfile feature in T-Mobile
Complementary package(both International & US)on S60 3.2.3. This feature flag is
valid for MyProfile UI & MyProfile synchronization.
*/
#undef FF_TCP_MYPROFILE                                   

/** #FF_TD_SCDMA 
This is a feature flag used to turn on/off TD-SCDMA releated features
*/
#undef FF_TD_SCDMA                                        

/** #FF_THEME_HAZE 
Haze theme is included in ROM image.

*/
#define FF_THEME_HAZE                                      

/** #FF_THEME_JINGMASK 
Jingmask theme is included in ROM image.

*/
#define FF_THEME_JINGMASK                                  

/** #FF_TOUCHSCREENCALIB_IN_STARTUP 
Touch Calibration UI is initiated at device startup.

*/
#undef FF_TOUCHSCREENCALIB_IN_STARTUP                     

/** #FF_TOUCH_UNLOCK_STROKE 
This flag enables user to response (for example answer) and unlock screen
through sliders (software controls) to mobile terminated calls. This applies
only to touch devices.
*/
#undef FF_TOUCH_UNLOCK_STROKE                             

/** #FF_UPNP_FRAMEWORK_2_0 
Defines whether UPNP application is supported in the platform through
MusicPlayer.
*/
#undef FF_UPNP_FRAMEWORK_2_0                              

/** #FF_USB_CHARGING 
If it is defined, the Starter starts the UsbWatcher.exe in charging mode. 
The USB Watcher or USB MSC Personality Plug-in code is not variated. 
Note. This flag replaces RD_USB_CHARGING in 5.0 release.
*/
#define FF_USB_CHARGING                                    

/** #FF_USB_HOST 
The flag excludes all S60 USB host and OTG related components. 
*/
#undef FF_USB_HOST                                        

/** #FF_USB_MODEM 
FF_USB_MODEM will be used to en/disable PAM(Phone As Modem) feature. When flag
is enabled, the feature is included in image.

KFeatureIdUsbModem is used for runtime variant.

*/
#undef FF_USB_MODEM                                       

/** #FF_USE_DEFAULT_KEYMAP 
Default Keymappings are included into image based on this flag
*/
#undef FF_USE_DEFAULT_KEYMAP                              

/** #FF_USE_EGPRS_ICON 
The flag is used to enable EGPRS icon in the status pane. If the flag is
disabled, GPRS icon must be shown instead of EGPRS icon.

*/
#undef FF_USE_EGPRS_ICON                                  

/** #FF_USE_MASS_STORAGE_CONFIG 
Flag is used for products to select in image creation time if mass storage drive
configuration is used or not. The mass storage drive configuration is following:
C=Phone memory, E=Internal mass storage and F=Memory card.

The flag affects how S60 components see the drives setup from estart
txt-file(s).
*/
#define FF_USE_MASS_STORAGE_CONFIG                         

/** #FF_USE_NAVIKEY_FOR_VOLUME 
This feature flag is used to enable/disable the use of the navikey for volume
adjustment. In products with no dedicated side volume key, this flag can be
enabled. When the flag is enabled, the "up" navikey is used to increment volume
by one step, and the "down" navikey is used to decrement volume by one step. 
*/
#undef FF_USE_NAVIKEY_FOR_VOLUME                          

/** #FF_USE_ZI_ENGINE 
On enabling this feature flag eZitext engine will be part of the Image and
Ptiengine will utilize eZitext engine for editing features.
*/
#undef FF_USE_ZI_ENGINE                                   

/** #FF_VANILLA_COMMSDAT 
The override flags FF_EMPTY_COMMSDAT, FF_VANILLA_COMMSDAT and FF_RND_COMMSDAT
determine which default CommsDat will be put to the image independent of image
type (prd or rnd):

- FF_EMPTY_COMMSDAT: Completely empty CommsDat is used. Typically needed as the
base when creating operator variants with Configuration Tool and
CommsDatCreator. Same as old FF_COMMSDAT_GENERATION_FROM_XML.

- FF_VANILLA_COMMSDAT: Otherwise empty CommsDat but the S60 default destinations
(Internet, MMS and Operator) as well as the Easy WLAN IAP (in case of WLAN
product) is included. This is suitable for vanilla variants of the phones.

- FF_RND_COMMSDAT: Platform releases contain typically the RND CommsDat that has
Nokia Test Network IAPs as well as some Finnish operator IAPs (DNA, Sonera,
Elisa) for RnD purposes.

Maximum of one of these flags should be defined at the time. 

If none of the override flags is defined then the used CommsDat depends on the
image type: vanilla CommsDat is used for PRD image and RnD CommsDat for the RnD
image. This is typically how it should be and the override flags should only be
used if some special functionality is needed.

*/
#undef FF_VANILLA_COMMSDAT                                

/** #FF_VIDEO_AUDIO_BRANDING 
When this flag is set on, videoplayer UI supports audio track type based
branding elements.
*/
#undef FF_VIDEO_AUDIO_BRANDING                            

/** #FF_VIRTUAL_FULLSCR_QWERTY_INPUT 
Indicates whether a device needs Virtual full-screen qwerty input or not.

*/
#define FF_VIRTUAL_FULLSCR_QWERTY_INPUT                    

/** #FF_VIRTUAL_ITUT_INPUT 
Indicates whether a device needs virtual ITUT input or not.
*/
#define FF_VIRTUAL_ITUT_INPUT                              

/** #FF_VMBX_CALL_DIVERT_ICON 
Feature flag controls whether or not a special icon is shown in status pane,
when call divert is set against voice mailbox number. 

*/
#undef FF_VMBX_CALL_DIVERT_ICON                           

/** #FF_VOICE_CALL_CONTINUITY 
With Voice Call Continuity it is possible to provide seamless user experience
when user in transition between VoIP and cellular networks. This feature brings
a method to seamlessly continue	ongoing voice call from VoIP to cellular and
vice versa. VCC handover logic shall be implemments as installable plugin (SIS)
in order to allow possibility to support several VCC signalling variations.
However VCC needed some platform changes to be fully functional (mainly at
telephony components) and those changes must be run time variable.
*/
#define FF_VOICE_CALL_CONTINUITY                           

/** #FF_VPN_CLIENT 
Feature flag is needed to manage whether VpnClient components are in ROM or not.
*/
#undef FF_VPN_CLIENT                                      

/** #FF_WEBVIDEO_PH2 
When enabled/defined, WEBVIDEO for ph2 is used. This will use Helix XPS
interface for video decoding and postprocessing.
*/
#undef FF_WEBVIDEO_PH2                                    

/** #FF_WLAN_EXTENSIONS 
Device supports extended WLAN functionalities e.g. for association and
authentication.
*/
#undef FF_WLAN_EXTENSIONS                                 

/** #FF_WLAN_WAPI 
 WLAN Authentication and Privacy Infrastructure (WAPI) is a Chinese national
standard for WLAN security. Although WAPI was designed to operate on top of the
IEEE 802.11 WLAN technologies, it is not compatible with the security schemes
defined in IEEE 802.11 specifications. It specifies its own methods for WLAN
authentication and data link protection.
*/
#undef FF_WLAN_WAPI                                       

/** #FF_WLAN_WAPI_INCLUDE_IN_ROM 
WLAN Authentication and Privacy Infrastructure (WAPI) is a Chinese national
standard for WLAN security. Although WAPI was designed to operate on top of the
IEEE 802.11 WLAN technologies, it is not compatible with the security schemes
defined in IEEE 802.11 specifications. It specifies its own methods for WLAN
authentication and data link protection.

This feature flag is used only for including WAPI binaries to ROM. WAPI
functionality can be (run-time) enabled with FF_WLAN_WAPI.
*/
#define FF_WLAN_WAPI_INCLUDE_IN_ROM                        

/** #FF_XML_IDLE_THEME_BASIC_IDLE 
Controls if Basic idle theme is going to image or not.
*/
#define FF_XML_IDLE_THEME_BASIC_IDLE                       

/** #FF_XML_IDLE_THEME_CLASSIC_IDLE 
Controls if Classic idle theme is going to image or not.
*/
#define FF_XML_IDLE_THEME_CLASSIC_IDLE                     

/** #FF_XML_IDLE_THEME_FINGERUSE_IDLE 
Controls if Finger use idle theme goes to image or not.
*/
#define FF_XML_IDLE_THEME_FINGERUSE_IDLE                   

/** #FF_XML_IDLE_THEME_NAVIBAR_IDLE 
Controls if Navibar idle theme is going to image or not.
*/
#define FF_XML_IDLE_THEME_NAVIBAR_IDLE                     

/** #LANGPACK_DEFAULTLANG 
The default language that is selected during bootup (this selection is
overridden by the sim language selection). 
*/
#define LANGPACK_DEFAULTLANG                               DEFINED

/** #LANGUAGE_ARABIC 
included Arabic
*/
#define LANGUAGE_ARABIC                                    

/** #LANGUAGE_BASQUE 
included Basque
*/
#define LANGUAGE_BASQUE                                    

/** #LANGUAGE_BULGARIAN 
included Bulgarian
*/
#define LANGUAGE_BULGARIAN                                 

/** #LANGUAGE_CATALAN 
included Catalan
*/
#define LANGUAGE_CATALAN                                   

/** #LANGUAGE_CROATIAN 
included Croatian
*/
#define LANGUAGE_CROATIAN                                  

/** #LANGUAGE_CZECH 
included Czech
*/
#define LANGUAGE_CZECH                                     

/** #LANGUAGE_DANISH 
included Danish
*/
#define LANGUAGE_DANISH                                    

/** #LANGUAGE_DUTCH 
included Dutch
*/
#define LANGUAGE_DUTCH                                     

/** #LANGUAGE_ENGLISH 
included English
*/
#define LANGUAGE_ENGLISH                                   

/** #LANGUAGE_ENGLISH_AMERICAN 
included English_American
*/
#define LANGUAGE_ENGLISH_AMERICAN                          

/** #LANGUAGE_ENGLISH_APAC 
included English_APAC
*/
#define LANGUAGE_ENGLISH_APAC                              

/** #LANGUAGE_ENGLISH_HONGKONG 
included English_Hongkong
*/
#define LANGUAGE_ENGLISH_HONGKONG                          

/** #LANGUAGE_ENGLISH_JAPANESE 
included English_Japanese
*/
#define LANGUAGE_ENGLISH_JAPANESE                          

/** #LANGUAGE_ENGLISH_PRCCHINA 
included English_PrcChina
*/
#define LANGUAGE_ENGLISH_PRCCHINA                          

/** #LANGUAGE_ENGLISH_TAIWAN 
included English_Taiwan
*/
#define LANGUAGE_ENGLISH_TAIWAN                            

/** #LANGUAGE_ENGLISH_THAI 
included English_Thai
*/
#define LANGUAGE_ENGLISH_THAI                              

/** #LANGUAGE_ESTONIAN 
included Estonian
*/
#define LANGUAGE_ESTONIAN                                  

/** #LANGUAGE_FARSI 
included Farsi
*/
#define LANGUAGE_FARSI                                     

/** #LANGUAGE_FINNISH 
included Finnish
*/
#define LANGUAGE_FINNISH                                   

/** #LANGUAGE_FRENCH 
included French
*/
#define LANGUAGE_FRENCH                                    

/** #LANGUAGE_FRENCH_AMERICAN 
included French_American
*/
#define LANGUAGE_FRENCH_AMERICAN                           

/** #LANGUAGE_GALICIAN 
included Galician
*/
#define LANGUAGE_GALICIAN                                  

/** #LANGUAGE_GERMAN 
included German
*/
#define LANGUAGE_GERMAN                                    

/** #LANGUAGE_GREEK 
included Greek
*/
#define LANGUAGE_GREEK                                     

/** #LANGUAGE_HEBREW 
included Hebrew
*/
#define LANGUAGE_HEBREW                                    

/** #LANGUAGE_HINDI 
included Hindi
*/
#undef LANGUAGE_HINDI                                     

/** #LANGUAGE_HONGKONG 
included Hongkong
*/
#define LANGUAGE_HONGKONG                                  

/** #LANGUAGE_HUNGARIAN 
included Hungarian
*/
#define LANGUAGE_HUNGARIAN                                 

/** #LANGUAGE_ICELANDIC 
included Icelandic
*/
#define LANGUAGE_ICELANDIC                                 

/** #LANGUAGE_INDONESIAN 
included Indonesian
*/
#define LANGUAGE_INDONESIAN                                

/** #LANGUAGE_INDONESIAN_APAC 
included Indonesian_APAC
*/
#define LANGUAGE_INDONESIAN_APAC                           

/** #LANGUAGE_ITALIAN 
included Italian
*/
#define LANGUAGE_ITALIAN                                   

/** #LANGUAGE_JAPANESE 
included Japanese
*/
#define LANGUAGE_JAPANESE                                  

/** #LANGUAGE_KOREAN 
Korean language is planned to add as part of S60 platfrom in TB9.1 platfrom
release. 
*/
#define LANGUAGE_KOREAN                                    

/** #LANGUAGE_LATVIAN 
included Latvian
*/
#define LANGUAGE_LATVIAN                                   

/** #LANGUAGE_LITHUANIAN 
included Lithuanian
*/
#define LANGUAGE_LITHUANIAN                                

/** #LANGUAGE_MALAY 
included Malay
*/
#define LANGUAGE_MALAY                                     

/** #LANGUAGE_MALAY_APAC 
included Malay_APAC
*/
#define LANGUAGE_MALAY_APAC                                

/** #LANGUAGE_NORWEGIAN 
included Norwegian
*/
#define LANGUAGE_NORWEGIAN                                 

/** #LANGUAGE_POLISH 
included Polish
*/
#define LANGUAGE_POLISH                                    

/** #LANGUAGE_PORTUGUESE 
included Portuguese
*/
#define LANGUAGE_PORTUGUESE                                

/** #LANGUAGE_PORTUGUESE_AMERICAN 
included Portuguese_American
*/
#define LANGUAGE_PORTUGUESE_AMERICAN                       

/** #LANGUAGE_PRCCHINA 
included PrcChina
*/
#define LANGUAGE_PRCCHINA                                  

/** #LANGUAGE_ROMANIAN 
included Romanian
*/
#define LANGUAGE_ROMANIAN                                  

/** #LANGUAGE_RUSSIAN 
included Russian
*/
#define LANGUAGE_RUSSIAN                                   

/** #LANGUAGE_SERBIAN 
included Serbian
*/
#define LANGUAGE_SERBIAN                                   

/** #LANGUAGE_SLOVAK 
included Slovak
*/
#define LANGUAGE_SLOVAK                                    

/** #LANGUAGE_SLOVENIAN 
included Slovenian
*/
#define LANGUAGE_SLOVENIAN                                 

/** #LANGUAGE_SPANISH 
included Spanish
*/
#define LANGUAGE_SPANISH                                   

/** #LANGUAGE_SPANISH_AMERICAN 
included Spanish_American
*/
#define LANGUAGE_SPANISH_AMERICAN                          

/** #LANGUAGE_SWEDISH 
included Swedish
*/
#define LANGUAGE_SWEDISH                                   

/** #LANGUAGE_TAGALOG 
included Tagalog
*/
#define LANGUAGE_TAGALOG                                   

/** #LANGUAGE_TAIWAN 
included Taiwan
*/
#define LANGUAGE_TAIWAN                                    

/** #LANGUAGE_THAI 
included Thai
*/
#define LANGUAGE_THAI                                      

/** #LANGUAGE_TURKISH 
included Turkish
*/
#define LANGUAGE_TURKISH                                   

/** #LANGUAGE_UKRAINIAN 
included Ukrainian
*/
#define LANGUAGE_UKRAINIAN                                 

/** #LANGUAGE_URDU 
included Urdu
*/
#define LANGUAGE_URDU                                      

/** #LANGUAGE_VIETNAMESE 
included Vietnamese
*/
#define LANGUAGE_VIETNAMESE                                

/** #SYMBIAN_INCLUDE_LOCATION_NPE_DSM 
To Include the AGPS NPE Integration module.

*/
#undef SYMBIAN_INCLUDE_LOCATION_NPE_DSM                   

/** #SYMBIAN_INCLUDE_LOCATION_SUPL_POS_INIT 
Includes the SUPL Pos message plugin.
*/
#undef SYMBIAN_INCLUDE_LOCATION_SUPL_POS_INIT             

/** #SYMBIAN_INCLUDE_LOCATION_SUPL_PROXY 
Includes the SUPL proxy protocol module and supporting APIs (Terminal initiation
API, Pos message API, Privacy request API, Network privacy API).
*/
#undef SYMBIAN_INCLUDE_LOCATION_SUPL_PROXY                

/** #__3D_MENU 
3D Menu feature enhances Application Shell with animating 3D icons.
*/
#define __3D_MENU                                          

/** #__3GP_EXTENTION 
This flag indicates that the 3GP Extention feature is supported in
MetadataUtility.
*/
#define __3GP_EXTENTION                                    

/** #__AAC_ENCODER_PLUGIN 
Device supports all-ARM AAC encoding capabilities.
*/
#define __AAC_ENCODER_PLUGIN                               

/** #__AAC_PLUS_DECODER_PLUGIN 
Device supports all-ARM AAC+ and Enhanced AAC+ decoding capabilities
*/
#define __AAC_PLUS_DECODER_PLUGIN                          

/** #__ACTIVE_IDLE 
The Active Idle includes several plugins to display different content.
Additional feature flags for them will be requested separately as the necessity
for them to be optional arises.At the moment this flag will cover all Active
Idle mandatory features.
*/
#undef __ACTIVE_IDLE                                      

/** #__ALLOW_UPGRADE_HELIX 
Support for Aftermarket update of Codecs, and File Formats. To allow the helix
dlls to be upgraded using a SISX file.
*/
#define __ALLOW_UPGRADE_HELIX                              

/** #__APP_CSD_SUPPORT 
Device supports internal (HS)CSD in application UIs.
*/
#undef __APP_CSD_SUPPORT                                  

/** #__AUDIO_EFFECTS_API 
Device supports utility APIs and framework for Series 60 Audio applications to
enable predefined audio effects with audio play/record utilities. Features lilke
Volume, Graphical Equalizer, Reverb are possible.
*/
#define __AUDIO_EFFECTS_API                                

/** #__AUDIO_MESSAGING 
Flag for Xpress Audio Messaging feature. Device supports recording and sending a
sound clip as a MMS message.
*/
#define __AUDIO_MESSAGING                                  

/** #__AUDIO_RESOURCE_INDICATIONS 
Device supports Audio Resource Indications Utility. Applications can use the
Audio Resource Indications Utility to request feedack when they can submit a
play request.
*/
#define __AUDIO_RESOURCE_INDICATIONS                       

/** #__AUTO_ACCESSORY_IDENTIFICATION 
Device supports automatic accessory identification.
*/
#undef __AUTO_ACCESSORY_IDENTIFICATION                    

/** #__BASIC_LOCATION_INFO_DISPLAY 
Device has basic location info display.
*/
#define __BASIC_LOCATION_INFO_DISPLAY                      

/** #__BASS_BOOST_EFFECT_UI 
"Device supports bass boost, increases Bass frequency response."
*/
#undef __BASS_BOOST_EFFECT_UI                             

/** #__BRIGHTNESS_CONTROL 
General settings application supports controlling display brightness.
*/
#undef __BRIGHTNESS_CONTROL                               

/** #__BTIC_BINARIES_CHECK_ENABLED 
In addition to the SWI certificate store check (defined by __BTIC_ENABLED), also
binaries (having TCB or DRM capability) in c: drive are integrity checked during
boot.
*/
#undef __BTIC_BINARIES_CHECK_ENABLED                      

/** #__BT_FAX_PROFILE 
Device supports Bluetooth fax profile.
*/
#undef __BT_FAX_PROFILE                                   

/** #__BT_SAP 
Bluetooth SIM Access Profile (SAP) allows another device to access the SIM over
Bluetooth.
*/
#define __BT_SAP                                           

/** #__CAMERA 
Device has Camera Application.
*/
#define __CAMERA                                           

/** #__CAMERA_FULLSCREEN_VIEWFINDER 
"Flag enables full screen mode in camera application. Full screen is supported
only in landscape mode. If hardware is not supporting landscape mode this flag
should be set off."
*/
#define __CAMERA_FULLSCREEN_VIEWFINDER                     

/** #__CAMERA_LENS_COVER 
The flag defines is the camera lens cover is supported by the HW.
*/
#undef __CAMERA_LENS_COVER                                

/** #__CAMERA_LOCATION_SUPPORT 
Enables Camera Application support for geotagging.
*/
#undef __CAMERA_LOCATION_SUPPORT                          

/** #__COMMDB_PROTECTION 
Device prevents transferring CommDb outside of the phone. 
*/
#undef __COMMDB_PROTECTION                                

/** #__COVER_DISPLAY 
Device has also separate cover display in addition to the main display.
*/
#undef __COVER_DISPLAY                                    

/** #__CS_VIDEO_TELEPHONY 
Device supports circuit switched video telephony
*/
#define __CS_VIDEO_TELEPHONY                               

/** #__CUSTOMISED_RFS 
"This flag enables customised RFS, that does not automatically erase content of
user area image."
*/
#undef __CUSTOMISED_RFS                                   

/** #__DEFAULT_CONNECTION 
Initial connection selection enables automatic usage of default destination
groups (like Internet) instead of single IAPs when starting network connections.
Deprecated in S60 5.0.
*/
#undef __DEFAULT_CONNECTION                               

/** #__DRM 
"Device supports OMA Digital Rights Management (DRM) partially, only forward
lock is supported"
*/
#define __DRM                                              

/** #__DRM_CLOCK 
"DRM clock is a new clock type that is used with DRM interval and datetime based
constraints. It uses NITZ (other solutions can be studied) to get the network
time and uses that to determine if the time constrained content can be rendered
or not. This enables the content providers to sell content twice e.g. first for
a short period of time and after that (assumed user lock in) for 2nd time with
full usage rights.The user shall still have control over the normal clock of the
device, but setting of that clock shall not have effect to the DRM clock. If
NITZ is not available, user defined clock is used."
*/
#define __DRM_CLOCK                                        

/** #__DRM_FULL 
"Device supports OMA Digital Rights Management (DRM) fully. Includes forward
lock, combined delivery, separate delivery and super-distribution"
*/
#define __DRM_FULL                                         

/** #__DRM_OMA2 
This feature flag is used to indicate whether OMA DRM standard version 2 is
enabled.
*/
#define __DRM_OMA2                                         

/** #__DRM_PHASE2 
This feature flag is used with OMA DRM standard version 2 (Phase2) features.
*/
#define __DRM_PHASE2                                       

/** #__EDIT_KEY 
The device has edit key
*/
#define __EDIT_KEY                                         

/** #__EMAIL_OVER_SMS 
Device supports sending email messages using SMS as the bearer transport.
*/
#undef __EMAIL_OVER_SMS                                   

/** #__EQUALIZER 
Device supports equalizer.
*/
#define __EQUALIZER                                        

/** #__FLASH_LITE_BROWSER_PLUGIN 
Device supports Macromedia Flash Lite plugin for Web Browser
*/
#define __FLASH_LITE_BROWSER_PLUGIN                        

/** #__FLASH_LITE_VIEWER 
Device supports Macromedia Flash Lite Viewer for opening and playing Flash
content files (.SWF).
*/
#define __FLASH_LITE_VIEWER                                

/** #__FM_RADIO 
Device contains support for FM radio (TunerUtility and RadioServer components).
*/
#define __FM_RADIO                                         

/** #__HANDWRITING_RECOGNITION_INPUT 
Device supports handwriting recognition input.
*/
#define __HANDWRITING_RECOGNITION_INPUT                    

/** #__HSXPA_SUPPORT 
When the feature flag is set, HSDPA setting item is visible for the user.
*/
#define __HSXPA_SUPPORT                                    

/** #__IM 
Device supports Instant Messaging feature of the Wireless Village initiative
*/
#define __IM                                               

/** #__IMAGE_VIEWER 
Flag controls whether the Image Viewer application is included in rom image.
*/
#define __IMAGE_VIEWER                                     

/** #__IMPS_STANDALONE_IP_CIR 
"Wireless Village features (__IM & __DPB) support standalone TCP/IP binding for
Communication Initiation Request (CIR).  The TCP/IP binding uses persistent
connection from the client to WV server to providelow-latency always-on CIR
channel."
*/
#define __IMPS_STANDALONE_IP_CIR                           

/** #__INCLUDE_AAC_CMMFCODEC 
AAC CMMFCodec (all-ARM software implementation) is included in build  to be used
by some other client than controller plug-in component.
*/
#define __INCLUDE_AAC_CMMFCODEC                            

/** #__INCLUDE_AMR_NB_CMMFCODEC 
AMR NB CMMFCodec (all-ARM software implementation) is included in build to be
used by some other client  than controller plug-in component.
*/
#define __INCLUDE_AMR_NB_CMMFCODEC                         

/** #__INCLUDE_AMR_WB_CMMFCODEC 
AMR WB CMMFCodec (all-ARM software implementation) is included in build  to be
used by some other client than controller plug-in component.
*/
#define __INCLUDE_AMR_WB_CMMFCODEC                         

/** #__INCLUDE_EAACPLUS_CMMFCODEC 
This flag is used to indicate that the eAAC+ soft codec should be included in
ROM.
*/
#define __INCLUDE_EAACPLUS_CMMFCODEC                       

/** #__INCLUDE_MP3_CMMFCODEC 
MP3 CMMFCodec (all-ARM software implementation) is included in build  to be used
by some other client than controller plug-in component.
*/
#define __INCLUDE_MP3_CMMFCODEC                            

/** #__INCLUDE_QCELP_CMMFCODEC 
QCELP CMMFCodec (all-ARM software implementation) is included in build  to be
used by some other client  than controller plug-in component.
*/
#define __INCLUDE_QCELP_CMMFCODEC                          

/** #__IPSEC 
Device supports IP Security (IPSec). The IPSec is a set of protocols developed
by the IETF to support secure exchange of packets at the IP layer. IPsec has
been deployed widely to implement Virtual Private Networks (VPNs).  
*/
#define __IPSEC                                            

/** #__IRDA 
Device supports Infrared.
*/
#define __IRDA                                             

/** #__JAVA 
"Java platform binaries are included to the phone image. When __JAVA feature
flag is undefined, other feature flags starting with __JAVA_ does not have any
effect on platform functionality. See also feature flag __JAVA_STUBS."
*/
#define __JAVA                                             

/** #__JAVA_STUBS 
"__JAVA_STUBS flag is defined, the build script is building only stubs of APIs
published by the Java domain. If the flag is not defined, both the functional
components and stub components are build. This flag must be defined if the
licensee do not have Java source code and would like to build the whole S60.
Note that it is possible to create S60 image with Java functionality if Java
binaries have been delivered to the licensee. More information is available in
__JAVA flag definition."
*/
#undef __JAVA_STUBS                                       

/** #__LAYOUT208_208 
Device supports 208x208 resolution (square)
*/
#undef __LAYOUT208_208                                    

/** #__LAYOUT_240_320 
Device supports 240x320 resolution (QVGA)
*/
#define __LAYOUT_240_320                                   

/** #__LAYOUT_240_320_LARGE_SCREEN 
"Device supports 240x320 resolution (QVGA2 for larger screens, portrait)"
*/
#define __LAYOUT_240_320_LARGE_SCREEN                      

/** #__LAYOUT_240_320_QVGA3 
Device supports 240x320 resolution (QVGA3)
*/
#undef __LAYOUT_240_320_QVGA3                             

/** #__LAYOUT_320_240 
Device supports 320x240 resolution (QVGA landscape)
*/
#define __LAYOUT_320_240                                   

/** #__LAYOUT_320_240_LARGE_SCREEN 
"Device supports 320x240 resolution (QVGA2 for larger screens, landscape)"
*/
#define __LAYOUT_320_240_LARGE_SCREEN                      

/** #__LAYOUT_320_240_QVGA3 
Device supports 320x240 resolution (QVGA3)
*/
#undef __LAYOUT_320_240_QVGA3                             

/** #__LAYOUT_360_640_TOUCH 
"Device supports 360x640 resolution (QHD portrait, touch screen)"
*/
#define __LAYOUT_360_640_TOUCH                             

/** #__LAYOUT_640_360_TOUCH 
"Device supports 640x360 resolution (QHD landscape, touch screen)"
*/
#define __LAYOUT_640_360_TOUCH                             

/** #__LOCATIONGPSHW 
Device has internal GPS hardware.
*/
#undef __LOCATIONGPSHW                                    

/** #__LOCATION_CENTRE 
Support for Location Centre. When enabled, Location Centre will be visible in
Application Shell.
*/
#define __LOCATION_CENTRE                                  

/** #__MACROMEDIA_FLASH_6 
Device supports macrodia flash 6.
*/
#define __MACROMEDIA_FLASH_6                               

/** #__MEDIA_TRANSFER_PROTOCOL 
Device supports MTP application.
*/
#define __MEDIA_TRANSFER_PROTOCOL                          

/** #__MMS_POSTCARD 
Flag is used ro incorporate Postcard application into the release.
*/
#undef __MMS_POSTCARD                                     

/** #__MPEG4_AAC_ENCODING 
Device supports MPEG-4 AAC encoding. Together with feature flag
__MPEG4_VIDEO_ENCODING this flag can also enable enconding for MP4 file format.
*/
#define __MPEG4_AAC_ENCODING                               

/** #__MPEG4_VIDEO_ENCODING 
Device supports MPEG4 encoding.
*/
#define __MPEG4_VIDEO_ENCODING                             

/** #__MRT_SDK_LIBRARIES 
"MRT libraries: Open C, SSL, GLIB and RGA."
*/
#define __MRT_SDK_LIBRARIES                                

/** #__MTP_PROTOCOL_SUPPORT 
Device supports Media Transfer Protocol. Note! This is for Music Player
variation only.
*/
#define __MTP_PROTOCOL_SUPPORT                             

/** #__NEWSTICKER 
This feature displays a 'CNN type' ticker of text pushed via cell broadcast,
onto the idle screen of the phone.
*/
#undef __NEWSTICKER                                       

/** #__NO_POWERKEY 
"Device does not have dedicated key for power management, but the functionality
is combined to some other hard key."
*/
#undef __NO_POWERKEY                                      

/** #__OMA_POC 
OMA Push-to-talk over Cellular.
*/
#undef __OMA_POC                                          

/** #__ON_SCREEN_DIALER 
This flag indicates that the dialer.dll is included to the rom image and
On-Screen Dialer is used for phone number entering. 
*/
#define __ON_SCREEN_DIALER                                 

/** #__OPENGL_ES_3DAPI 
Device supports OpenGL ES and EGL versions 1.0. This feature enables 3D graphics
rendering
*/
#define __OPENGL_ES_3DAPI                                  

/** #__OPENGL_ES_SW_IMPLEMENTATION 
Device has a software implementation of OpenGL ES and EGL. No hardware support.
If __OPENGL_ES_3DAPI is enabled, either HW or SW implementation should exist. If
HW is not present, this flag should be enabled.
*/
#define __OPENGL_ES_SW_IMPLEMENTATION                      

/** #__OPERATOR_CACHE 
Browser application supports persistent cache in addition to default volatile
cache.  Contents of this cache will remain from one browser session to the next
(also through power cycles of the phone.)
*/
#define __OPERATOR_CACHE                                   

/** #__OPERATOR_MENU 
Device contains Operator menu application.  It is a wrapper to Browser
application and allows using operator specific application icon (and label), and
allows opening wanted URL initially.
*/
#define __OPERATOR_MENU                                    

/** #__PEN_SUPPORT 
Indicates whether a device has a pen support.
*/
#define __PEN_SUPPORT                                      

/** #__PEN_SUPPORT_CALIBRATION 
Touch Screen Calibration application.
*/
#define __PEN_SUPPORT_CALIBRATION                          

/** #__PRESENCE 
Device supports Presence feature of the Wireless Village initiative. 
*/
#define __PRESENCE                                         

/** #__PRODUCT_REMCON_TSP 
"A flag to include/exclude S60 default TSP implementation in ROM.When the flag
is set on the default remcon TSP implementation is removed from the ROM."
*/
#undef __PRODUCT_REMCON_TSP                               

/** #__PROTOCOL_WCDMA 
Device supports WCDMA cellular stack
*/
#define __PROTOCOL_WCDMA                                   

/** #__PROTOCOL_WLAN 
Device supports WLAN protocol.
*/
#define __PROTOCOL_WLAN                                    

/** #__QOS 
Device supports Quality of Service (QOS). The QoS is capability of a network to
provide better service to selected network traffic.
*/
#define __QOS                                              

/** #__QVGA2_LAYOUT_IN_USE 
"Device uses alternative QVGA layout with smaller fonts, designed for devices
having larger physical screen size."
*/
#undef __QVGA2_LAYOUT_IN_USE                              

/** #__QWERTY_INPUT 
Indicates whether a device has qwerty keyboard or not.
*/
#define __QWERTY_INPUT                                     

/** #__RSS_FEEDS 
Device supports Feeds (RSS) functionality.
*/
#define __RSS_FEEDS                                        

/** #__RTP_STACK 
Device supports RTP.
*/
#define __RTP_STACK                                        

/** #__RV9 
Device supports RealVideo9.
*/
#define __RV9                                              

/** #__S60_FM_RADIO_APPLICATION 
Device contains Series 60 FM Radio application components.
*/
#define __S60_FM_RADIO_APPLICATION                         

/** #__SDND 
Device supports Speaker Dependent Name Dialling (SIND). That is an ability to
voice-dial to a contact in the phone book by training a voice tag for the
contact.
*/
#undef __SDND                                             

/** #__SENDUI_MMS_UPLOAD 
Flag is used to incorporate MMS upload feature into the release.
*/
#undef __SENDUI_MMS_UPLOAD                                

/** #__SEND_FILE_IN_CALL 
Device supports sending a file to active call number.
*/
#define __SEND_FILE_IN_CALL                                

/** #__SERIES60_AMBIENT_LIGHT_SENSOR 
Device has Ambient Light Sensor feature.
*/
#define __SERIES60_AMBIENT_LIGHT_SENSOR                    

/** #__SERIES60_HELP 
Device support context helps in applications.
*/
#define __SERIES60_HELP                                    

/** #__SERIES60_KEYPAD_NO_SLIDER 
Device does not have a keyboard slider to activate keyboard.
*/
#define __SERIES60_KEYPAD_NO_SLIDER                        

/** #__SERIES60_KEYPAD_NO_VOICE_KEY 
Device does not have a separate voice key to activate voice command
functionality.
*/
#undef __SERIES60_KEYPAD_NO_VOICE_KEY                     

/** #__SERIES60_NATIVE_BROWSER 
Device includes standard Series 60 browser.
*/
#define __SERIES60_NATIVE_BROWSER                          

/** #__SERIES60_PHONE_TTY 
Device supports Tele Type (TTY) functionality.  TTY is also referred to as TDD
(Telecommunication Device for the Deaf). Applicable to devices targeted to
United States (US) markets. 
*/
#define __SERIES60_PHONE_TTY                               

/** #__SHOW_PANICS 
Device shows SW panic note when an application panic (unexpected error) occurs.
Disabling this feature in a final product is recommended.
*/
#define __SHOW_PANICS                                      

/** #__SIDE_VOLUME_KEYS 
Device supports side volume keys.
*/
#define __SIDE_VOLUME_KEYS                                 

/** #__SIND 
Device supports Speaker Independent Name Dialling (SIND). That is an ability to
voice-dial to any contact in the phone book without first training a voice tag.
*/
#define __SIND                                             

/** #__SIP_SIMPLE_PRESENCE_PROTOCOL 
This flag is used to control the existance of SIP/SIMPLE feature in S60.
*/
#define __SIP_SIMPLE_PRESENCE_PROTOCOL                     

/** #__SLIDESHOW_SCREENSAVER 
Flag controls whether the slideshow screensaver plugin is included or not. Also
affects Themes (Psln) and Screensaver AIW provider.
*/
#define __SLIDESHOW_SCREENSAVER                            

/** #__STEREO_WIDENING_EFFECT_UI 
Device supports stereo widening to enhance the stereo surround effect.
*/
#undef __STEREO_WIDENING_EFFECT_UI                        

/** #__SVGT_VIEWER 
SVG-T viewer is included in the build.
*/
#define __SVGT_VIEWER                                      

/** #__SYNCML_DM_DIAGNOSTICS 
This feature enables collection of device diagnostics data and sending it to
Device Management server or to PC Suite.
*/
#undef __SYNCML_DM_DIAGNOSTICS                            

/** #__SYNCML_DM_FOTA 
Device supports OTA firmware update.
*/
#define __SYNCML_DM_FOTA                                   

/** #__SYNCML_DM_IMPS 
Device supports configuring IMPS using SyncML.
*/
#define __SYNCML_DM_IMPS                                   

/** #__SYNCML_DM_OBEX 
Device supports device management over OBEX.
*/
#define __SYNCML_DM_OBEX                                   

/** #__SYNCML_DM_OTA 
SyncML DM OMA provisioning adapter.
*/
#define __SYNCML_DM_OTA                                    

/** #__SYNCML_DM_SIP 
Device supports configuring SIP settings using SyncML.
*/
#define __SYNCML_DM_SIP                                    

/** #__SYNCML_DM_VOIP 
Device supports configuring VoIP settings using SyncML.
*/
#define __SYNCML_DM_VOIP                                   

/** #__SYNCML_DM_WLAN 
Device management WLAN settings supported.
*/
#define __SYNCML_DM_WLAN                                   

/** #__SYNCML_DS_BOOKMARK 
Device supports Bookmark data synchronization using the SyncML.
*/
#define __SYNCML_DS_BOOKMARK                               

/** #__SYNCML_DS_MMS 
Device supports MMS data synchronisation using the SyncML.
*/
#define __SYNCML_DS_MMS                                    

/** #__SYNCML_DS_NOTEPAD 
Device supports short memos (notes) data synchronisation using the SyncML.
*/
#define __SYNCML_DS_NOTEPAD                                

/** #__SYNCML_DS_SMS 
Device supports SMS synchronisation using the SyncML.
*/
#define __SYNCML_DS_SMS                                    

/** #__SYNCML_ISYNC 
Device supports Apple iSync profile
*/
#define __SYNCML_ISYNC                                     

/** #__SYNCML_TWIN_SUITE 
Feature flag for the next generation PC Suite.
*/
#undef __SYNCML_TWIN_SUITE                                

/** #__TV_OUT 
TV-Out Settings UI
*/
#define __TV_OUT                                           

/** #__UPNP_AVCP 
Flag enables support of Audio&Video in UPnP stack. 
*/
#define __UPNP_AVCP                                        

/** #__UPNP_MEDIASERVER 
Flag enables support of Media Server in UPnP stack. 
*/
#define __UPNP_MEDIASERVER                                 

/** #__UPNP_PRINT_FRAMEWORK 
Flag enables support of printing in UPnP stack.
*/
#define __UPNP_PRINT_FRAMEWORK                             

/** #__UPNP_REMOTE_STORAGE 
Flag that enables support of remotestorage support and mapping of drives. 
*/
#undef __UPNP_REMOTE_STORAGE                              

/** #__UPNP_STACK 
This feature enables controlling and accessing other deveices via UPnP protocol.

*/
#define __UPNP_STACK                                       

/** #__USE_AAC_CMMFCODEC 
AAC codec controller plug-in uses CMMFCodec (all-ARM software implementation)
instead of using the codec through HWDevice.
*/
#define __USE_AAC_CMMFCODEC                                

/** #__USE_AMR_NB_CMMFCODEC 
AMR NB codec controller plug-in uses CMMFCodec (all-ARM software implementation)
instead of using the codec through HWDevice.
*/
#define __USE_AMR_NB_CMMFCODEC                             

/** #__USE_AMR_WB_CMMFCODEC 
AMR WB codec controller plug-in uses CMMFCodec (all-ARM software implementation)
instead of using the codec through HWDevice.
*/
#define __USE_AMR_WB_CMMFCODEC                             

/** #__USE_EAACPLUS_CMMFCODEC 
This flag is used to configure the AudioControllerPluginsVariant to use the
either the soft codec (if #defined)  or the HW codec (if #undefed).
*/
#define __USE_EAACPLUS_CMMFCODEC                           

/** #__USE_MP3_CMMFCODEC 
MP3 codec controller plug-in uses CMMFCodec (all-ARM software implementation)
instead of using the codec through HWDevice.
*/
#define __USE_MP3_CMMFCODEC                                

/** #__USE_QCELP_CMMFCODEC 
QCELP codec controller plug-in uses CMMFCodec (all-ARM software implementation)
instead of using the codec through HWDevice.
*/
#define __USE_QCELP_CMMFCODEC                              

/** #__VFP_HW_SUPPORT 
The device supports for vector floating-point (VFP) architecture
*/
#define __VFP_HW_SUPPORT                                   

/** #__VIBRA 
Indicates whether a device has a vibra support.
*/
#define __VIBRA                                            

/** #__VIDEOCALL_MENU_VISIBILITY 
This flag moves video call menus to upper layer for better visibility and
usability.
*/
#undef __VIDEOCALL_MENU_VISIBILITY                        

/** #__VIDEO_CENTER_SUPPORTED 
Device supports Video Center application.
*/
#undef __VIDEO_CENTER_SUPPORTED                           

/** #__VIDEO_RECORDER 
Device has Video Recorder (CamCorder) application available.
*/
#define __VIDEO_RECORDER                                   

/** #__VIRTUAL_KEYBOARD_INPUT 
Device supports Virtual keyboard input ( on-screen keyboard).
*/
#define __VIRTUAL_KEYBOARD_INPUT                           

/** #__WEB_WIDGETS 
This feature is used to turn ON/OFF widgets implementation. Widgets are small
applications that use webtechnologies like HTML/CSS/JS.
*/
#define __WEB_WIDGETS                                      

/** #__WLAN_WEP256_ENABLED 
WLAN hardware supports 256 bit WEP encryption
*/
#undef __WLAN_WEP256_ENABLED                              

/** #__WMA 
Device supports playback of WMA audio files.
*/
#define __WMA                                              

/** #__WORLD_CLOCK 
Clock application supports World clock and City/country views
*/
#define __WORLD_CLOCK                                      

/** #__XDM 
This flag is used to control the existance of the OMA XDM feature
*/
#define __XDM                                              

/** #__XDM_LOCALSTORAGE 
This flag is used to control the existence of the Local Storage protocol
implementation of XDM
*/
#define __XDM_LOCALSTORAGE                                 

/** #__XDM_XCAP 
This flag is used to control the existance of the XCAP protocol implementation
of XDM
*/
#define __XDM_XCAP                                         

/** Features added from bldcustomsw.hrh (copied from bldcustomsw.hrh)*/

/** #FF_MTP_ALBUM_ART */
#undef FF_MTP_ALBUM_ART

/** #FF_MUSIC_PATH_PLUGIN */
#undef FF_MUSIC_PATH_PLUGIN

/** #FF_POWER_KEY_AS_KEYGUARD */
#undef FF_POWER_KEY_AS_KEYGUARD

/** #FF_DISPLAY_NETWORK_NAME_AFTER_CS_REGISTRATION */
#undef FF_DISPLAY_NETWORK_NAME_AFTER_CS_REGISTRATION

/** #FF_MANUAL_SELECTION_POPULATED_PLMN_LIST */
#undef FF_MANUAL_SELECTION_POPULATED_PLMN_LIST

/** #FF_MOBILITY_MANAGEMENT_ERRORS */
#undef FF_MOBILITY_MANAGEMENT_ERRORS

/** #FF_SERVICE_CALL_WHILE_PHONE_LOCKED */
#undef FF_SERVICE_CALL_WHILE_PHONE_LOCKED

/** #FF_LOCATIONSYSUI_HIDE_POSITIONING_MENU */
#undef FF_LOCATIONSYSUI_HIDE_POSITIONING_MENU

/** #FF_MASTER_RESET_AND_CLEAR_SUBMENU */
#undef FF_MASTER_RESET_AND_CLEAR_SUBMENU

/** #FF_SIMLOCK_UI */
#undef FF_SIMLOCK_UI

/** #FF_ENTRY_POINT_FOR_VIDEO_SHARE */
#undef FF_ENTRY_POINT_FOR_VIDEO_SHARE

/** #FF_IMS_DEREGISTRATION_IN_OFFLINE */
#undef FF_IMS_DEREGISTRATION_IN_OFFLINE

/** #FF_IMS_DEREGISTRATION_IN_RFS */
#undef FF_IMS_DEREGISTRATION_IN_RFS

/** #FF_IMS_DEREGISTRATION_IN_VPN */
#undef FF_IMS_DEREGISTRATION_IN_VPN

/** #FF_INTRANET_BROWSING */
#undef FF_INTRANET_BROWSING         

/** #FF_HOME_SCREEN_EASY_DIALING */
#define FF_HOME_SCREEN_EASY_DIALING                                  

#endif // __BLDPUBLIC_HRH
