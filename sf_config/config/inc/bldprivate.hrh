/*
* Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description: 
*
*/


#ifndef __BLDPRIVATE_HRH 
#define __BLDPRIVATE_HRH 

 
/** #ENABLE_ABIV2_MODE  
Enableds new target platform ARMV5 ABIv2. 
*/ 
#define ENABLE_ABIV2_MODE                                   
 
/** #EUSBC  
EUSBC flag 
*/ 
#undef EUSBC                                               
 
/** #EXCLUDE_JAVA  
Excludes Symbian implementation of Java components. S60 offers its own  Java
implementation. 
*/ 
#define EXCLUDE_JAVA                                        
 
/** #FF_M3G_ICON_RESOURCES  
Controls whether the m3g icon resources are included in the ROM image or not. 
*/ 
#undef FF_M3G_ICON_RESOURCES                               
 
/** #FF_ORIENTATION_ACTION_RULE_90  
This flag relates to autorotation feature. It is needed to set right display
orientation for different products because sensors are located in different
place in different product. The flag selects correct set of rule files for
Context Framework / Applicationstatesourceplugin component, which depend on used
sensor.
 
*/ 
#define FF_ORIENTATION_ACTION_RULE_90                       
 
/** #FF_SIMLESS_OFFLINE_SUPPORT  
Enable / disable SIMless Offline Mode. 
*/ 
#define FF_SIMLESS_OFFLINE_SUPPORT                          
 
/** #FF_SYSAP_TIMECHANGEOBSERVER_ENABLED  
SysAp time change observer is needed to inform custom driver about user clock
time change.
 
*/ 
#undef FF_SYSAP_TIMECHANGEOBSERVER_ENABLED                 
 
/** #FF_TEST_AT_COMMAND  
"When the flag is set,  locod will be started and AT command can be passed
through via USB cable all the way to modem side for testing purpose." 
*/ 
#undef FF_TEST_AT_COMMAND                                  
 
/** #FF_TOUCH_CALL_HANDLING  
Touch: Advanced components for CS Voice Telephony. 
*/ 
#define FF_TOUCH_CALL_HANDLING                              
 
/** #FF_WDP_EMMC  
Select writable demand paging eMMC flash driver build . 
*/ 
#undef FF_WDP_EMMC                                         
 
/** #FF_WDP_NAND  
Select writable demand paging NAND flash driver build. 
*/ 
#undef FF_WDP_NAND                                         
 
/** #FF_WS_NCIM  
This run-time flag is required for enableing NCIM at the run-time. 
NCIM, here onwards called as "Nokia account".
There is a requirement to be able to remove NCIM feature at run-time.
A brief description of NCIM: 
To implement UI for Sign-up and Sign-In. Provide simple APIs for applications to
launch Sign-up and Sign-in UIs. Offer Single Sign On for all applications using
NCIM Device Enablers.  Handle all communication to NCIM backend regarding
account creation, session handling, authentication and authorization. 
*/ 
#define FF_WS_NCIM                                          
 
/** #FF__ROM_HIDE_ISRAEL  
This flag controls whether Israel as a state defined in MENA and Arabic
varients.  
*/ 
#undef FF__ROM_HIDE_ISRAEL                                 
 
/** #HLP_ADDITIONAL_CALENDAR  
USED ONLY FOR HELP CONTENT VARIATION 
*/ 
#undef HLP_ADDITIONAL_CALENDAR                             
 
/** #HLP_APAC_VARIATION  
Flag to be used for image creation time variation -- need to separate 3G/APAC
help variants. 
*/ 
#undef HLP_APAC_VARIATION                                  
 
/** #HLP_CAMERA_KEY  
USED ONLY FOR HELP CONTENT VARIATION 
*/ 
#undef HLP_CAMERA_KEY                                      
 
/** #HLP_CLEAR_KEY  
USED ONLY FOR HELP CONTENT VARIATION 
*/ 
#define HLP_CLEAR_KEY                                       
 
/** #HLP_INTERNET_SUITE_VERY_LITE  
This flag is used only for help variation. 
Flag needs to be turned on when the Internet Suite Very Lite is present. 
*/ 
#undef HLP_INTERNET_SUITE_VERY_LITE                        
 
/** #HLP_ITUT_INPUT  
USED ONLY FOR HELP CONTENT VARIATION 
*/ 
#undef HLP_ITUT_INPUT                                      
 
/** #HLP_MSK  
USED ONLY FOR HELP CONTENT VARIATION 
*/ 
#define HLP_MSK                                             
 
/** #HLP_OMA_DRM_METERING  
USED ONLY FOR HELP CONTENT VARIATION 
*/ 
#undef HLP_OMA_DRM_METERING                                
 
/** #HLP_PREMINET_CATALOGS_CLIENT  
USED ONLY FOR HELP CONTENT VARIATION 
*/ 
#undef HLP_PREMINET_CATALOGS_CLIENT                        
 
/** #HLP_RECENTLY_PLAYED_FOLDER  
USED ONLY FOR HELP CONTENT VARIATION 
*/ 
#undef HLP_RECENTLY_PLAYED_FOLDER                          
 
/** #HLP_SENSOR_SETTINGS  
When this flag is used, help content for Sensor settings is visible. Originally
it is needed for backporting the Sensor framework functionality from 5.0 to 3.2. 
*/ 
#undef HLP_SENSOR_SETTINGS                                 
 
/** #HLP_WAYPOINTS  
USED ONLY FOR HELP CONTENT VARIATION 
*/ 
#undef HLP_WAYPOINTS                                       
 
/** #JSR_135_SUPPORT  
"Java implementation supports advanced features of Java Mobile Media API
(JSR135) version 1.1, implemented in release 2.6 onwards. This flag must always
be enabled when __JAVA_MMAPI11 is enabled." 
*/ 
#define JSR_135_SUPPORT                                     
 
/** #NO_CBCP_PARSER_IN_ROM   
Do not include symbian CBCP parser in rom 
*/ 
#define NO_CBCP_PARSER_IN_ROM                               
 
/** #NO_ENP_PARSER_IN_ROM  
This feature flag can be used to not to include symbian ENP Parser into ROM
image. 
*/ 
#define NO_ENP_PARSER_IN_ROM                                
 
/** #NO_GFP_PARSER_IN_ROM  
This feature flag can be used to not to include symbian GFP Parser into ROM
image. 
*/ 
#define NO_GFP_PARSER_IN_ROM                                
 
/** #NO_IACP_PARSER_IN_ROM  
his feature flag can be used to not to include symbian IACP Parser into ROM
image. 
*/ 
#define NO_IACP_PARSER_IN_ROM                               
 
/** #NO_WAPP_PARSER_IN_ROM   
This feature flag can be used to not to include symbian WAPP parser into ROM
image. 
*/ 
#define NO_WAPP_PARSER_IN_ROM                               
 
/** #RD_XML_PARSER_TOOLCHAIN  
"Used to turn on and off the use of the arabica and xercesc components in the
build system, and code in the layout compiler." 
*/ 
#define RD_XML_PARSER_TOOLCHAIN                             
 
/** #SYMBIAN_APA_LOAD_DATA_RECOGNIZERS_ONDEMAND  
By default Apparc server loads all recognizer dlls on startup.
Loading can be configured to load recognizers on demand:
patchdata apserv.dll @ KApaLoadDataRecognizersOnDemand 1
=> 0 = dlls loaded on startup (default)
=> 1 = dlls loaded on demand
	
patchdata apserv.dll @ KApaUnLoadDataRecognizersTimeOut 10000000 
=> 10000000 [milliseconds] = 10s, Time after unused recognizer is unloaded 
(default)

Dependency to the SYMBIAN_KAPAUNLOADDATARECOGNIZERSTIMEOUT feature flag.
 
*/ 
#define SYMBIAN_APA_LOAD_DATA_RECOGNIZERS_ONDEMAND         0 
 
/** #SYMBIAN_APA_UNLOAD_DATA_RECOGNIZERS_TIMEOUT  
By default Apparc server loads all recognizer dlls on startup. Loading can be
configured to load recognizers on demand: 
patchdata apserv.dll @ KApaLoadDataRecognizersOnDemand 1
 => 0 = dlls loaded on startup (default)
 => 1 = dlls loaded on demand 
patchdata apserv.dll @ KApaUnLoadDataRecognizersTimeOut 10000000 
=> 10000000 [milliseconds] = 10s, Time after unused recognizer is unloaded
(default)  
*/ 
#define SYMBIAN_APA_UNLOAD_DATA_RECOGNIZERS_TIMEOUT        0 
 
/** #SYMBIAN_BAFL_SYSUTIL  
If SYMBIAN_BAFL_SYSUTIL is defined, the bafl sysutil.dll is present, 
providing APIs for obtaining system version information and 
APIs for monitoring free disk space.

@see SysUtil::GetSWVersion
@see SysUtil::DiskSpaceBelowCriticalLevelL
 
*/ 
#define SYMBIAN_BAFL_SYSUTIL                                
 
/** #SYMBIAN_DOS_SERVER_SERVICES  
Indicate that the DOS Server Services is present. This is needed to turn the RF
on in an emergency call when the phone is in flight mode. In 9.5 we are using
the System State Manager. 
*/ 
#undef SYMBIAN_DOS_SERVER_SERVICES                         
 
/** #SYMBIAN_EXCLUDE_DNS_PROXY  
If the Exclude DNS proxy Macro is enabled then DNS proxy service is disabled on
the device.

Introduced by PREQ1684 Simple DNS proxy
 
*/ 
#undef SYMBIAN_EXCLUDE_DNS_PROXY                           
 
/** #SYMBIAN_EXCLUDE_D_EXC  
This flag can be used to exclude Symbian's d_exc.exe from rom image when
Symbian's base.iby is included 
*/ 
#define SYMBIAN_EXCLUDE_D_EXC                               
 
/** #SYMBIAN_EXCLUDE_ECAM_STUBPLUGIN  
This flag is used to exclude Symbian Camera API stub 
*/ 
#undef SYMBIAN_EXCLUDE_ECAM_STUBPLUGIN                     
 
/** #SYMBIAN_EXCLUDE_FAX  
Flag to exclude fax related binaries from images. No runtime variation, only
used at image creation. 
*/ 
#undef SYMBIAN_EXCLUDE_FAX                                 
 
/** #SYMBIAN_EXCLUDE_INFRARED  
removes symbian infrared components from rom 
*/ 
#undef SYMBIAN_EXCLUDE_INFRARED                            
 
/** #SYMBIAN_EXCLUDE_KEYMAP  
This flag can be used to include/exclude Symbian's KEYMAP_FILE (EKData.dll) from
rom image if base.iby is included 
*/ 
#define SYMBIAN_EXCLUDE_KEYMAP                              
 
/** #SYMBIAN_EXCLUDE_LIBXML2  
This feature flag removes libxml2.dll from image. 
*/ 
#undef SYMBIAN_EXCLUDE_LIBXML2                             
 
/** #SYMBIAN_EXCLUDE_LIBXML2_DOM_XPATH_API  
This feature flag removes libxml2.dll from image. 
*/ 
#undef SYMBIAN_EXCLUDE_LIBXML2_DOM_XPATH_API               
 
/** #SYMBIAN_EXCLUDE_LIBXML2_SAX_CPARSER_PLUGIN  
This feature flag removes libxml2.dll from image. 
*/ 
#undef SYMBIAN_EXCLUDE_LIBXML2_SAX_CPARSER_PLUGIN          
 
/** #SYMBIAN_EXCLUDE_LOCATION_MANAGEMENT  
The macro SYMBIAN_EXCLUDE_LOCATION_MANAGEMENT is used to exclude the location
management components of the Location Framework from ROM.Default value should be
"Defined". 

 
*/ 
#define SYMBIAN_EXCLUDE_LOCATION_MANAGEMENT                 
 
/** #SYMBIAN_EXCLUDE_MSMM_POLICY_PLUGIN  
Excludes Symbian's reference implementation of the USB Mass Storage Mount
Manager from ROM. Licensees can then replace it with own implementation. With
that flag it can be excluded from usbhostmsmm.iby.

Related with PREQ1305
 
*/ 
#undef SYMBIAN_EXCLUDE_MSMM_POLICY_PLUGIN                  
 
/** #SYMBIAN_EXCLUDE_SCDV  
This flag can be used to exclude Symbian ScDv.dll from rom image when Symbian's
base.iby is included 
*/ 
#define SYMBIAN_EXCLUDE_SCDV                                
 
/** #SYMBIAN_EXCLUDE_SIP  
Excludes Symbian SIP components.  
*/ 
#undef SYMBIAN_EXCLUDE_SIP                                 
 
/** #SYMBIAN_EXCLUDE_WIFI  
Removes Symbian wlan componets 
*/ 
#undef SYMBIAN_EXCLUDE_WIFI                                
 
/** #SYMBIAN_GRAPHICS_ADAPTATION  
This flag is used to take right graphics adaptation components to the ROM build 
*/ 
#define SYMBIAN_GRAPHICS_ADAPTATION                        None 
 
/** #SYMBIAN_GRAPHICS_USE_GCE  
Includes the Symbian the Surface Manager and Graphics Composition Engine on ROM
images. Required binaries are only built, when SYMBIAN_BUILD_GCE flag is defined
in symbian_os.hrh. 
*/ 
#undef SYMBIAN_GRAPHICS_USE_GCE                            
 
/** #SYMBIAN_GRAPHICS_USE_WSERV2  
WServ2 binaries are used instead of WSERV1 versions. 
*/ 
#undef SYMBIAN_GRAPHICS_USE_WSERV2                         
 
/** #SYMBIAN_HAL_NONSECUREOFFSET_PERSISTENCE_DISABLED  
Non secure offset persistence must be disabled in secure time 
*/ 
#define SYMBIAN_HAL_NONSECUREOFFSET_PERSISTENCE_DISABLED   1 
 
/** #SYMBIAN_HAL_PENSTATE_PERSISTENCE_DISABLED  
Provide an option to allow platform to not save HALData::EPenState attribute. 
*/ 
#define SYMBIAN_HAL_PENSTATE_PERSISTENCE_DISABLED          1 
 
/** #SYMBIAN_HCI_API_V2  
If SYMBIAN_HCI_API_V2 is not defined, then the only version of the HCI built
will be HCI V1.
If SYMBIAN_HCI_API_V2 is defined, then both HCI V1 and HCI V2 will be built.

More information:
\src\common\generic\bluetooth\latest\documentation\Designs\Bluetooth_Design_HCI_v2.doc 
*/ 
#define SYMBIAN_HCI_API_V2                                  
 
/** #SYMBIAN_HEAP_MIN_CELL_SIZE  
To optimize the memory parameters in euser.dll and ekern.exe. The setting
defines the minimum cell size of  a heap.
The constant is using patchdata OBY keyword in PatchData.iby.<BR>
<BR>
patchdata euser.dll@KHeapMinCellSize SYMBIAN_EUSER_HEAP_MIN_CELL_SIZE<BR>
patchdata ekern.exe@KHeapMinCellSize SYMBIAN_EUSER_HEAP_MIN_CELL_SIZE<BR> 
*/ 
#define SYMBIAN_HEAP_MIN_CELL_SIZE                         32 
 
/** #SYMBIAN_HEAP_SHRINK_HYS_RATIO  
This parameter configures heap optimization in euser.dll and ekern.exe.
This constant defines the ratio that determines the amount of hysteresis between
heap growing and heap
shrinking.
It is a 32-bit fixed point number where the radix point is defined to be
between bits 7 and 8 (where the LSB is bit 0) i.e. using standard notation, a Q8
or a fx24.8
fixed point number.  For example, for a ratio of 2.0, set
KHeapShrinkHysRatio=0x200.
<BR>
The heap shrinking hysteresis value is calculated to be:<BR>
@code<BR>
KHeapShrinkHysRatio*(iGrowBy>>8)<BR>
@endcode<BR>
where iGrowBy is a page aligned value set by the argument, aGrowBy, to the RHeap
constructor.<BR>
The default hysteresis value is iGrowBy bytes i.e.
KHeapShrinkHysRatio=2.0.<BR><BR>

Memory usage may be improved by reducing the heap shrinking hysteresis
by setting 1.0 < KHeapShrinkHysRatio < 2.0.  Heap shrinking hyteresis is
disabled/removed
when KHeapShrinkHysRatio <= 1.0.

The constant is used patchdata OBY keyword in PatchData.iby.<BR>
<b>patchdata euser.dll@KHeapShrinkHysRatio
SYMBIAN_EUSER_HEAP_SHRINK_HYS_RATIO</b>
<b>patchdata ekern.exe@KHeapShrinkHysRatio
SYMBIAN_EUSER_HEAP_SHRINK_HYS_RATIO</b>
<br><br>
If the value is undefined the default value inside code is used. 
*/ 
#define SYMBIAN_HEAP_SHRINK_HYS_RATIO                      256 
 
/** #SYMBIAN_INCLUDE_BLUETOOTH_GPS_PM  
It is required to support Symbian Core OS transfer.It includes the Bluetooth PSY
in ROM.Default value should be "Defined". 
*/ 
#define SYMBIAN_INCLUDE_BLUETOOTH_GPS_PM                    
 
/** #SYMBIAN_INCLUDE_BLUETOOTH_V2_1  
Define if HCIv2 (bluetooth v2.1) is included in image. If both flags
SYMBIAN_INCLUDE_BLUETOOTH_V2_1 and SYMBIAN_USE_HCI_V2 are defined, bluetooth
v2.1 version is used. 
*/ 
#define SYMBIAN_INCLUDE_BLUETOOTH_V2_1                      
 
/** #SYMBIAN_INCLUDE_DEFAULT_PM  
It is required to support Symbian Core OS transfer.It includes the Default Proxy
PSY in ROM.Default value should be "Defined". 
*/ 
#define SYMBIAN_INCLUDE_DEFAULT_PM                          
 
/** #SYMBIAN_INCLUDE_DNS_PUNYCODE  
Enables DNS resolution of International Domain Names
Introduced by PREQ2296 
 
*/ 
#undef SYMBIAN_INCLUDE_DNS_PUNYCODE                        
 
/** #SYMBIAN_INCLUDE_LOCATION_ADVANCED_DIALOG  
This is required to support Core OS symbian transfer.It includes  Privacy Query
and Notification API  to the ROM image.Default value should be "Defined". 
*/ 
#define SYMBIAN_INCLUDE_LOCATION_ADVANCED_DIALOG            
 
/** #SYMBIAN_INCLUDE_LOCATION_AGPS_PM  
Includes the AGPS Positioning Module for the LBS sub-system in ROM. 

Introduced by PREQ1662.
 
*/ 
#undef SYMBIAN_INCLUDE_LOCATION_AGPS_PM                    
 
/** #SYMBIAN_INCLUDE_LOCATION_API_VARIANT2  
If this macro is set (the default) the Location Framework for S60 licensees is
included to ROM.Default value should be "Defined". 

 
*/ 
#define SYMBIAN_INCLUDE_LOCATION_API_VARIANT2               
 
/** #SYMBIAN_INCLUDE_LOCATION_GPS_PM  
Includes the GPS Positioning Module for the LBS sub-system in ROM. 
Introduced by PREQ1662.
 
*/ 
#undef SYMBIAN_INCLUDE_LOCATION_GPS_PM                     
 
/** #SYMBIAN_INCLUDE_LOCATION_NETWORK_PM  
Includes the Network Positioning Module for the LBS sub-system in ROM. 

Introduced by PREQ1662.
 
*/ 
#undef SYMBIAN_INCLUDE_LOCATION_NETWORK_PM                 
 
/** #SYMBIAN_INCLUDE_LOCATION_PRIVACY_REQUEST_APIS  
It is required to support Symbian Core OS transfer.It includes Privacy Protocol
Module and its APIs (the Network Privacy API and the Privacy Request API) in the
ROM image.Default value should be "Defined". 
*/ 
#define SYMBIAN_INCLUDE_LOCATION_PRIVACY_REQUEST_APIS       
 
/** #SYMBIAN_INCLUDE_USB_OTG_HOST  
Feature USB Host (and related OTG) binaries are included into romimage 
*/ 
#undef SYMBIAN_INCLUDE_USB_OTG_HOST                        
 
/** #SYMBIAN_INCLUDE_USB_RNDIS  
 plugin, RNDIS agent and IP stack packet driver in the ROM. 
Introduced by PREQ1872.
 
*/ 
#define SYMBIAN_INCLUDE_USB_RNDIS                           
 
/** #SYMBIAN_MBUF_POOL_SIZE  
The size of the MBuf pool is adjustable. The MBuf pool is used for creating
buffers for communication data.

The MBuf is configurable in c32start.ini :
\src\common\generic\comms-infras\rootserver\etc\
It is runtime read configuration file, e.g.:

[Global]
MBufPoolSize=<initial size>,<max size> [bytes] 

Default MBufPoolSize=262144,262144.
If single value => interpreted as max size. 

When an initial size is specified the pool grows when necessary until it reaches
the maximum size. It does not shrink, however, so the RAM is not released until
the device is rebooted.
 
*/ 
#define SYMBIAN_MBUF_POOL_SIZE                             0 
 
/** #SYMBIAN_MULTIMEDIA_A3FDEVSOUND  
This definition is used in symbian A3F build files.
If this flag is enabled, A3F is build.
if this flag is disabled, devsound is build. 
*/ 
#define SYMBIAN_MULTIMEDIA_A3FDEVSOUND                      
 
/** #SYMBIAN_NOKIA_FEATURE_MANAGER  
Indicates that the Nokia version of the Feature Manager is present. The Feature
Manager was part of the CoreOS, and there is a Symbian version of it in 9.5.  
*/ 
#undef SYMBIAN_NOKIA_FEATURE_MANAGER                       
 
/** #SYMBIAN_ODP_NUMBER_OF_MAX_LIVE_PAGES  
Defines the maximum number of 4k live pages available in the system for code
paging. From Symbian 9.4 onwards same pool is used by file system cache and thus
the amount of pages should be increased in order to preserve good system
performance and memory consumption balance. Increasing the value increases the
memory consumption. 
*/ 
#define SYMBIAN_ODP_NUMBER_OF_MAX_LIVE_PAGES               0 
 
/** #SYMBIAN_ODP_NUMBER_OF_MIN_LIVE_PAGES  
Defines the minimum number of 4k live pages available in the system for code
paging. From Symbian 9.4 onwards same pool is used by file system cache and thus
the amount of pages should be increased in order to preserve good system
performance and memory consumption balance. Increasing the value decreases the
amount of free memory after start up. 
*/ 
#define SYMBIAN_ODP_NUMBER_OF_MIN_LIVE_PAGES               0 
 
/** #SYMBIAN_SYSTEM_STATE_MANAGEMENT  
If SYMBIAN_SYSTEM_STATE_MANAGEMENT is defined, this will enable 
the System State Management Architecture, which supports the 
concept of system states (including startup, normal operation, 
shutdown, and failure) and associated behaviour, and facilitates 
the transitioning between them according to licensee-defined 
policies and procedures.

This define supports PREQ1871. 
*/ 
#define SYMBIAN_SYSTEM_STATE_MANAGEMENT                     
 
/** #SYMBIAN_USE_DOS_SERVER_SERVICES  
The DOS_SERVER_SERVICES should indicate that the DOS Server Services is present.
This is needed to turn the RF on in an emergency call when the phone is in
flight mode. 
*/ 
#undef SYMBIAN_USE_DOS_SERVER_SERVICES                     
 
/** #SYMBIAN_USE_HCI_V2  
Defines if HCIv2 (bluetooth v2.0) is used in image or not. 
*/ 
#define SYMBIAN_USE_HCI_V2                                  
 
/** #SYMBIAN_USE_NOKIA_FEATURE_MANAGER  
The macro NOKIA_FEATURE_MANAGER should indicate that the Nokia version of the
Feature Manager is present. The Feature Manager was part of the CoreOS, and
there is a Symbian version of it in 9.5. 
*/ 
#undef SYMBIAN_USE_NOKIA_FEATURE_MANAGER                   
 
/** #USE_MSCDB  
Enable usage of mass storage double buffering. 
*/ 
#define USE_MSCDB                                           
 
/** #WITH_FAT32  
Enables FAT32 feature in Symbian OS. 
*/ 
#define WITH_FAT32                                          
 
/** #WITH_MASS_STORAGE  
Enables USB mass storage feature in Symbian OS. 
*/ 
#define WITH_MASS_STORAGE                                   
 
/** #_EXCLUDE_SIP_LAN_SUPPORT_  
Disables the H2LAN plugin delivered by Symbian OS 9.2 (and later versions)  
*/ 
#define _EXCLUDE_SIP_LAN_SUPPORT_                           
 
/** #__AAC  
Device supports Advanced Audio Coding (AAC) codec. 
*/ 
#define __AAC                                               
 
/** #__ACCESSORY_FW  
Accessory framework is a Series 60 subsystem that enables adding various
accessory types to the platform by licensees. 
*/ 
#define __ACCESSORY_FW                                      
 
/** #__ALWAYS_ONLINE  
"Devices supports Always On-line framework which enables various always-online
plug-ins, e.g. Email." 
*/ 
#define __ALWAYS_ONLINE                                     
 
/** #__ALWAYS_ONLINE_EMAIL  
Device supports keeping mailbox always connected and up to date. 
*/ 
#define __ALWAYS_ONLINE_EMAIL                               
 
/** #__ALWAYS_ONLINE_PDPCONTEXT  
Flag is used to include always on PDP context plugin binaries to the build. 
*/ 
#undef __ALWAYS_ONLINE_PDPCONTEXT                          
 
/** #__ALWAYS_ONLINE_PDPCONTEXT2  
"Flag is used to include always on PDP context plugin binaries, version 2, to
the build." 
*/ 
#undef __ALWAYS_ONLINE_PDPCONTEXT2                         
 
/** #__AMR_NB  
Device supports Adaptive Multi-Rate (AMR) narrowband codec. 
*/ 
#define __AMR_NB                                            
 
/** #__AMR_WB  
Device supports Adaptive Multi-Rate (AMR) wideband codec. 
*/ 
#define __AMR_WB                                            
 
/** #__APPLICATION_CONTROLLABLE_AUDIO_ROUTING  
"An application UI can control audio routing in addition to adaption layer. If 
this feature is off, only the adaptation layer controls the audio routing and
the corresponding DOS Plug-in API has to be implemented." 
*/ 
#undef __APPLICATION_CONTROLLABLE_AUDIO_ROUTING            
 
/** #__APPSHELL_AVKON_UI  
This flag defines if Application Shell should use Avkon architecture in UI
implementation instead of XML UI framework (XUIKON). It affects only to
Application Shell component. 
*/ 
#undef __APPSHELL_AVKON_UI                                 
 
/** #__ARM_AVC  
This feature flag will enable/disable the ability of RealPlayer to playback AVC
(H.264) video by including/excluding the AVC codec DLL and AVC Depacketizer DLL
in the rom image. 
*/ 
#define __ARM_AVC                                           
 
/** #__ARM_MDF_H263MPEG4_DEC  
Support for MDF H263 MPEG4 decoder. This decoder is used by MediaPlayer via new
helix engine and MDF. Excluded if hardware accelerated decoder is used instead. 
*/ 
#define __ARM_MDF_H263MPEG4_DEC                             
 
/** #__ARM_MDF_H264_DEC  
Support for MDF H264 decoder. This decoder is used by MediaPlayer via new helix
engine and MDF. Excluded if hardware accelerated decoder is used instead. 
*/ 
#define __ARM_MDF_H264_DEC                                  
 
/** #__ARM_MDF_POSTPROCESSOR  
Support for MDF Post processor. Excluded if hardware accelerated post-processing
is used instead. 
*/ 
#define __ARM_MDF_POSTPROCESSOR                             
 
/** #__ARM_MDF_REALVIDEO_DEC  
Support for MDF Realvideo decoder. This decoder is used by MediaPlayer via new
helix engine and MDF. Excluded if hardware accelerated decoder is used instead. 
*/ 
#define __ARM_MDF_REALVIDEO_DEC                             
 
/** #__AT_HANDLER  
Symbian OS side AT Handler is used with Bluetooth Hands Free profile to process
and communicate with DOS. 
*/ 
#define __AT_HANDLER                                        
 
/** #__AUDIO_AAC  
Deprecated feature flag for Advanced Audio Coding (AAC) codec. Use __AAC 
feature instead. 
*/ 
#define __AUDIO_AAC                                         
 
/** #__AUDIO_CONTROLLER_STREAMING  
Device supports Audio Controller Streaming feature. 
*/ 
#define __AUDIO_CONTROLLER_STREAMING                        
 
/** #__AUDIO_PLAYLIST  
Media Gallery & Player applications support audio file playlist (M3U media queue
format).  
*/ 
#define __AUDIO_PLAYLIST                                    
 
/** #__AVC_DECODER  
Device supports H.264/MPEG4 AVC decoder 
*/ 
#define __AVC_DECODER                                       
 
/** #__AVC_ENCODER  
Device supports H.264/MPEG4 AVC encoder 
*/ 
#define __AVC_ENCODER                                       
 
/** #__BEATNIK_AUDIOENGINE  
"Beatnik Audio engine is the standard, default engine in S60 platform. With this
flag, it is possible to variate out Beatnik Audio Engine and uses another midi
audio engines." 
*/ 
#define __BEATNIK_AUDIOENGINE                               
 
/** #__BLUETOOTHGPSPSY  
"Devices supports Bluetooth based GPS positining. It utilizes bluetooth
connection to retrieve location information from wireless GPS device, which
supports required Bluethooth profile.  Must always be supported due SDK APIs." 
*/ 
#define __BLUETOOTHGPSPSY                                   
 
/** #__BRANDING_SERVER  
Component enables service provider specific branding in applications. 
*/ 
#define __BRANDING_SERVER                                   
 
/** #__BROWSER_ADAPTIVE_BOOKMARKS  
Browser application supports additional list of bookmarks that gets generated
automatically from visited links.  List is sorted by automatic algorithm which
ranks according to combination of most-recently and most-often visited pages.  
*/ 
#define __BROWSER_ADAPTIVE_BOOKMARKS                        
 
/** #__BROWSER_AUDIO_PLUGIN  
Support for Browser Plugin. Used in deciding whether the browser audio pugin is
taken into builds. 
*/ 
#define __BROWSER_AUDIO_PLUGIN                              
 
/** #__BROWSER_FILE_UPLOAD  
"Browser application supports posting a file from the file system to Web server,
in addition to ""normal"" user input." 
*/ 
#define __BROWSER_FILE_UPLOAD                               
 
/** #__BROWSER_FRAMES  
Browser aplication support HTML <frame> tags. 
*/ 
#define __BROWSER_FRAMES                                    
 
/** #__BROWSER_FULLSCREEN  
Browser application supports expanding the amount of screen space used for
browser display. 
*/ 
#define __BROWSER_FULLSCREEN                                
 
/** #__BROWSER_NARROW_SCREEN  
Browser application supports Narrow screen rendering. That enables user to read
HTML content more easily without a need to scroll horizontally. 
*/ 
#define __BROWSER_NARROW_SCREEN                             
 
/** #__BROWSER_NETSCAPE_API  
Browser application supports Netscape plug-in API. 
*/ 
#define __BROWSER_NETSCAPE_API                              
 
/** #__BROWSER_PLUGIN_INTERFACE_PROXY  
The PluginAdapterUtil is a variant DLL that guarantees a common interface for
plugins when interfacing with the Browser (PluginAdapter Interface). Proxy
interface is used and flag is enabled with Opera browser. 
*/ 
#undef __BROWSER_PLUGIN_INTERFACE_PROXY                    
 
/** #__BROWSER_PROGRESS_IND  
"Browser application supports more detailed information of download progress (in
addition to ""spinning globe"")" 
*/ 
#define __BROWSER_PROGRESS_IND                              
 
/** #__BROWSER_URL_COMPLETION  
"Browser application supports URL completion. When user manually enters ""go
to"" URL, list of previously-visited links will appear for selection based on
matching entered characters." 
*/ 
#define __BROWSER_URL_COMPLETION                            
 
/** #__BROWSER_VIDEO_PLUGIN  
Support for Browser Plugin. Used in deciding whether the browser video plugin is
taken in. 
*/ 
#define __BROWSER_VIDEO_PLUGIN                              
 
/** #__BT  
Device supports Bluetooth. 
*/ 
#define __BT                                                
 
/** #__BTIC_ENABLED  
Device has component that performs integrity check of SWI certificate store in
c: drive during boot. 
*/ 
#define __BTIC_ENABLED                                      
 
/** #__BT_AUDIO  
Device supports BT handsfree and headset profiles. 
*/ 
#define __BT_AUDIO                                          
 
/** #__BT_IMAGING_PROFILE  
Device supports bluetooth imaging profile. 
*/ 
#define __BT_IMAGING_PROFILE                                
 
/** #__BT_PAN_PROFILE  
Device support BT PAN profile 
*/ 
#undef __BT_PAN_PROFILE                                    
 
/** #__BT_PBAP  
Support for Phone Book Access Profile 
*/ 
#define __BT_PBAP                                           
 
/** #__BT_PRINTING_PROFILE  
Device supports bluetooth printing profile. 
*/ 
#undef __BT_PRINTING_PROFILE                               
 
/** #__BT_STEREO_AUDIO  
Device supports Bluetooth stereo audio. 
*/ 
#define __BT_STEREO_AUDIO                                   
 
/** #__BT_TEST_MODE  
"When this flag is enabled, the device can be put in the BT test mode. " 
*/ 
#define __BT_TEST_MODE                                      
 
/** #__CAE_VR_CUSTOM_COMMANDS  
Optimisation flag of the CamCorder for cases where device replaces the default
Camcorder plugin. Then this flag must be turned off (#undef) due to performance
reasons.  
*/ 
#define __CAE_VR_CUSTOM_COMMANDS                            
 
/** #__CALL_IMAGETEXT  
"Device supports showing an image, animated GIF or text for an incoming call." 
*/ 
#define __CALL_IMAGETEXT                                    
 
/** #__CAMERA_BURST_MODE  
Camera application supports burst mode. It enables taking several snapshots with
one command. 
*/ 
#define __CAMERA_BURST_MODE                                 
 
/** #__CDMA_CHANNEL_LISTING  
"Media player supports Channel Listing Mode.Channel Listing  is a method of
content presentation. Content will be displayed as a list of channels the user
can choose from. The device will make a request for the channel listing each
time the multimedia application is invoked." 
*/ 
#undef __CDMA_CHANNEL_LISTING                              
 
/** #__CDMA_EXTENDED_AMS  
Device supports Sprint extensions to Application Management System (AMS).
Applicable only to CDMA devices 
*/ 
#undef __CDMA_EXTENDED_AMS                                 
 
/** #__CDMA_FAST_DORMANT  
This is used to add the Fast Dormant daemon to the image at creation time and
could also be used in the custom TSY to add the additional calls. 
*/ 
#undef __CDMA_FAST_DORMANT                                 
 
/** #__CDMA_IOTA  
"Device supports Internet Over The Air (IOTA), applicable only to CDMA devices.
This feature enables over the air provisioning of mobile devices using HTTP." 
*/ 
#undef __CDMA_IOTA                                         
 
/** #__CELL_BROADCAST  
Device supports Cell Broadcast feature (CBS). 
*/ 
#define __CELL_BROADCAST                                    
 
/** #__CHATNG  
"The new IM UI Application (called IM UI NG, NG = New Generation)" 
*/ 
#define __CHATNG                                            
 
/** #__COMMON_DSY  
When this flag is enabled it Common DSY component is included. 
*/ 
#define __COMMON_DSY                                        
 
/** #__COMMON_TSY  
When this flag is enabled it Common TSY component is included. 
*/ 
#define __COMMON_TSY                                        
 
/** #__COMMON_TSY__EMERGENCY_CALLS_ENABLED_IN_OFFLINE_MODE  
When this flag is enabled it is possible to dial an emergency call even when the
off-line mode is on. 
*/ 
#define __COMMON_TSY__EMERGENCY_CALLS_ENABLED_IN_OFFLINE_MODE  
 
/** #__CONNMON_EXTENSION  
Defines whether the Connection Monitor Extension API is used. 
*/ 
#define __CONNMON_EXTENSION                                 
 
/** #__CONNMON_UI  
Device supports connection monitoring UI. 
*/ 
#define __CONNMON_UI                                        
 
/** #__CONTENT_DOWNLOAD  
Device supports OMA content download. 
*/ 
#define __CONTENT_DOWNLOAD                                  
 
/** #__DHCP  
Device supports Dynamic Host Configuration Protocol (DHCP). 
*/ 
#define __DHCP                                              
 
/** #__DIALUP_NETWORKING  
"The feature enables device to support Dial-up Networking service (Bluetooth,
IrDA or USB)." 
*/ 
#define __DIALUP_NETWORKING                                 
 
/** #__DISPLAY_POST  
The flag allows to choose between built-in Display Post implementation or an
external Display Post module. 
*/ 
#define __DISPLAY_POST                                      
 
/** #__DPB  
Device has Presence Enhanced Contacts application 
*/ 
#define __DPB                                               
 
/** #__DRIVE_MODE  
This flag enables drive mode profile. The profile is silent and unmodifiable. In
this profile the phone refuses to receive calls. 
*/ 
#undef __DRIVE_MODE                                        
 
/** #__DRM_USER_DATA_TRANSFER  
"There must be possibility to transfer downloaded applications and other DRM
content to the swap phone in a service point through service software.UDT makes
it possible to transfer user's valuable content and Rights DB containig Rights
objects for DRM content to another phone (containing same functionality) e.g. in
warranty cases." 
*/ 
#undef __DRM_USER_DATA_TRANSFER                            
 
/** #__DYNAMIC_PROFILES  
Profiles application supports user to add new / delete old profiles. 
*/ 
#define __DYNAMIC_PROFILES                                  
 
/** #__EDGE_KNOWLEDGE  
This flag defines whether the information of current radio link using EDGE is
available through Connection Monitor component. 
*/ 
#define __EDGE_KNOWLEDGE                                    
 
/** #__EMAIL_UI  
Device has email UI components. 
*/ 
#define __EMAIL_UI                                          
 
/** #__ENABLE_BACKSTEPPING  
A flag that defines whether Backstepping -service is in use in Music Player.
With Backstepping, MusicSuite and Music Widget interaction with music player is
much more fluent. Back takes back to Music Suite, instead of Music Player
library view. This flag will enable compilation of mpxbacksteppingutility, which
music player uses to implement Backstepping. Synergy Change: ou1cimx1#122317 
*/ 
#undef __ENABLE_BACKSTEPPING                               
 
/** #__EN_POLICY_DOS  
"ENPolicy provides emergency number policy APIs and is used by phoneserver
component.DOS emergency number policy checks emergency number by using ETel
custom API.SOS emergency number policy checks emergency number by using ETel
multimode API and System agent." 
*/ 
#define __EN_POLICY_DOS                                     
 
/** #__EXE_PROTECTION  
"Applications are not allowed to be started from MMC, when this flag is
enabled." 
*/ 
#undef __EXE_PROTECTION                                    
 
/** #__EXTENDED_STARTUP  
Device boot framework supports starting also 3rd party applications upon the
boot. By default only native applications can be started. 
*/ 
#define __EXTENDED_STARTUP                                  
 
/** #__FLIGHT_MODE  
Device suppors flight mode. Device can be used off-line. RF and Bluetooth
transmitters are inactive and emergency call is not possible. 
*/ 
#undef __FLIGHT_MODE                                       
 
/** #__FMTX  
The feature flag is used to enable/disable the FM radio transmitter. 
*/ 
#undef __FMTX                                              
 
/** #__GENERAL_SEARCH_FRAMEWORK  
"This feature finds keywords in application data files, databases, services and
locations available in mobile environment. This flag controls the framework
(engine) part of the search feature." 
*/ 
#define __GENERAL_SEARCH_FRAMEWORK                          
 
/** #__GENERAL_SEARCH_UI  
"This feature finds keywords in application data files, databases, services and
locations available in mobile environment. This flag controls the UI part of the
search feature." 
*/ 
#define __GENERAL_SEARCH_UI                                 
 
/** #__HINDI_ROM_CONTENT  
Device supports Hindi fonts. Flag may be used only in IBY files. 
*/ 
#undef __HINDI_ROM_CONTENT                                 
 
/** #__HTTP_DIGEST_AUTH  
HTTP digest authentication 
*/ 
#define __HTTP_DIGEST_AUTH                                  
 
/** #__HWRM_TARGET_MODIFIER_PLUGIN  
HWRM Target Modifier Plug-in (TMP) is responsible for device specific target
modifications according to target activation status. Customers desiring custom
functionality can simply replace the entire plug-in by udefining the flag and
implementing own plug-in. 
*/ 
#define __HWRM_TARGET_MODIFIER_PLUGIN                       
 
/** #__ID3V2_METADATA  
"The component provides metadata information for music clients based on the
2.2,2.3,and 2.4 standards of ID3V2." 
*/ 
#define __ID3V2_METADATA                                    
 
/** #__IETD  
"Device supports Image enhancement for transflective display. If this feature is
on,  the Display Enhancements Adaptation API has to be implemented." 
*/ 
#undef __IETD                                              
 
/** #__IMAGE_UPLOAD  
Device supports Image Upload feature. 
*/ 
#undef __IMAGE_UPLOAD                                      
 
/** #__INDIC_ROM_CONTENT  
Device supports Indic fonts. Flag may be used only in IBY files. 
*/ 
#define __INDIC_ROM_CONTENT                                 
 
/** #__INSTALLER_SISX  
Device supports native Symbian OS installation packages. 
*/ 
#define __INSTALLER_SISX                                    
 
/** #__IPV4_NAT  
Device supports network address translation of IP (version 4) connections. 
*/ 
#undef __IPV4_NAT                                          
 
/** #__IPV6  
Device application Uis support IPV6. 
*/ 
#define __IPV6                                              
 
/** #__IP_PUSH  
Device supports IP Push feature. 
*/ 
#undef __IP_PUSH                                           
 
/** #__I_CAL_SUPPORT  
This flag enables I-Cal syncronization. 
*/ 
#define __I_CAL_SUPPORT                                     
 
/** #__JAPANESE_PICTOGRAPHS_GROUPING  
Activates alternative grouping of Japanese pictographs. This feature is
effective only if __JAPANESE_PICTOGRAPHS is also defined. 
*/ 
#undef __JAPANESE_PICTOGRAPHS_GROUPING                     
 
/** #__JAVA_3DAPI  
Java implementation supports 3D API  (JSR184) 
*/ 
#define __JAVA_3DAPI                                        
 
/** #__JAVA_API_ENHANCEMENTS_IAP  
Support for Java API enhancements which provides access to internet access point
settings and allows the selection of the destination network. 
*/ 
#define __JAVA_API_ENHANCEMENTS_IAP                         
 
/** #__JAVA_API_ENHANCEMENTS_MOBINFO  
"Support for Java API enhancements which provides access to telephony properties
and services. These properties include IMEI, IMSI, battery change level, network
signal strength and network country code." 
*/ 
#define __JAVA_API_ENHANCEMENTS_MOBINFO                     
 
/** #__JAVA_ESWT  
Support for Embedded Standard Widget Toolkit.  
*/ 
#define __JAVA_ESWT                                         
 
/** #__JAVA_FILEAPI  
Java implementation supports Java File API (JSR75) 
*/ 
#define __JAVA_FILEAPI                                      
 
/** #__JAVA_J2MEWEBSERVICESAPI  
"Java J2ME Web Services API (JSR-172) compliancy.Provides two new capabilities
to the J2ME platform: (1) access to remote SOAP / XML based web services(2)
parsing XML data" 
*/ 
#define __JAVA_J2MEWEBSERVICESAPI                           
 
/** #__JAVA_JSR177_SECURITY_AND_TRUST_SERVICES_APDU  
Flag enables the optional APDU part of Java Adaptation of the Security and Trust
Services API JSR 177 implementation.  
*/ 
#define __JAVA_JSR177_SECURITY_AND_TRUST_SERVICES_APDU      
 
/** #__JAVA_JSR177_SECURITY_AND_TRUST_SERVICES_CRYPTO  
Flag enables the optional Crypto part of Java Adaptation of the Security and
Trust Services API JSR 177 implementation.  
*/ 
#define __JAVA_JSR177_SECURITY_AND_TRUST_SERVICES_CRYPTO    
 
/** #__JAVA_JSR177_SECURITY_AND_TRUST_SERVICES_PKI  
Flag enables the optional PKI part of Java Adaptation of the Security and Trust
Services API JSR 177 implementation.  
*/ 
#define __JAVA_JSR177_SECURITY_AND_TRUST_SERVICES_PKI       
 
/** #__JAVA_JSR205_WMA_2_0_SUPPORT  
"Device supports JSR 205, WMA 2.0 specification." 
*/ 
#define __JAVA_JSR205_WMA_2_0_SUPPORT                       
 
/** #__JAVA_JSR_177_SECURITY_AND_TRUST_SERVICES  
"Device supports JSR 177, Security and Trust Services API for J2ME" 
*/ 
#define __JAVA_JSR_177_SECURITY_AND_TRUST_SERVICES          
 
/** #__JAVA_JSR_180_SIP_API  
"Device supports JSR 180, SIP API for J2ME" 
*/ 
#undef __JAVA_JSR_180_SIP_API                              
 
/** #__JAVA_JSR_226_2D_SVG_API  
"Device supports JSR 226, Scalable 2D Vector Graphics API for J2ME" 
*/ 
#define __JAVA_JSR_226_2D_SVG_API                           
 
/** #__JAVA_JSR_234_3D_AUDIO_AND_MUSIC_CAPABILITIES  
"Device supports JSR 234, Advanced Multimedia Supplements" 
*/ 
#define __JAVA_JSR_234_3D_AUDIO_AND_MUSIC_CAPABILITIES      
 
/** #__JAVA_LOCATIONAPI  
Java implementation supports Java Location API (JSR-179) 
*/ 
#define __JAVA_LOCATIONAPI                                  
 
/** #__JAVA_MIDP20  
Device has Java MIDP2.0. 
*/ 
#define __JAVA_MIDP20                                       
 
/** #__JAVA_MMAPI11  
Java implementation supports Java Mobile Media API (JSR135) version 1.1 
*/ 
#define __JAVA_MMAPI11                                      
 
/** #__JAVA_PIMAPI  
Java implementation supports Java PIM API (JSR75) 
*/ 
#define __JAVA_PIMAPI                                       
 
/** #__KEEP_DRM_CONTENT_ON_PHONE  
Device prevents transferring DRM protected content out of the phone.  
*/ 
#undef __KEEP_DRM_CONTENT_ON_PHONE                         
 
/** #__LANDMARKS  
Defines whether landmarks feature is supprted in the device. 
*/ 
#define __LANDMARKS                                         
 
/** #__LANDMARKS_CONVERTER  
"This feature provides functionality for reading from and writing to the
XML-based landmarks content format.Must always be supported due SDK APIs. There
are two components with this feature:- Ecom plug-in under Landmarks API that
converts from the landmarks content format to native landmark objects and vise
versa. - Recognizer Plug-in to recognizer FW for detecting landmarks content
format." 
*/ 
#define __LANDMARKS_CONVERTER                               
 
/** #__LAYOUT176_208  
Device supports 176x208 resolution 
*/ 
#undef __LAYOUT176_208                                     
 
/** #__LAYOUT208_176  
Device supports 208x176 resolution 
*/ 
#undef __LAYOUT208_176                                     
 
/** #__LAYOUT_240_320_TOUCH  
"Device supports 240x320 resolution (QVGA, touch screen)" 
*/ 
#undef __LAYOUT_240_320_TOUCH                              
 
/** #__LAYOUT_320_240_TOUCH  
"Device supports 320x240 resolution (QVGA landscape, touch screen)" 
*/ 
#undef __LAYOUT_320_240_TOUCH                              
 
/** #__LAYOUT_320_480  
Device supports 320x480 resolution (HVGA portrait) 
*/ 
#undef __LAYOUT_320_480                                    
 
/** #__LAYOUT_320_480_TOUCH  
"Device supports 320x480 resolution (HVGA portrait, touch screen)" 
*/ 
#define __LAYOUT_320_480_TOUCH                              
 
/** #__LAYOUT_352_416  
Device supports 352x416 resolution (double) 
*/ 
#undef __LAYOUT_352_416                                    
 
/** #__LAYOUT_352_800  
Device supports 352x800 resolution (WVGA portrait) 
*/ 
#undef __LAYOUT_352_800                                    
 
/** #__LAYOUT_416_352  
Device supports 416x352 resolution (double landscape) 
*/ 
#undef __LAYOUT_416_352                                    
 
/** #__LAYOUT_480_320  
Device supports 480x320 resolution (HVGA landscape) 
*/ 
#undef __LAYOUT_480_320                                    
 
/** #__LAYOUT_480_320_TOUCH  
"Device supports 480x320 resolution (HVGA landscape, touch screen)" 
*/ 
#define __LAYOUT_480_320_TOUCH                              
 
/** #__LAYOUT_480_640  
Device supports 480x640 resolution (VGA portrait) 
*/ 
#undef __LAYOUT_480_640                                    
 
/** #__LAYOUT_480_640_TOUCH  
"Device supports 480x640 resolution (VGA portrait, touch screen)" 
*/ 
#undef __LAYOUT_480_640_TOUCH                              
 
/** #__LAYOUT_640_480  
Device supports 640x480 resolution (VGA landscape) 
*/ 
#undef __LAYOUT_640_480                                    
 
/** #__LAYOUT_640_480_TOUCH  
"Device supports 640x480 resolution (VGA landscape, touch screen)" 
*/ 
#undef __LAYOUT_640_480_TOUCH                              
 
/** #__LAYOUT_800_352  
Device supports 800x352 resolution (WVGA landscape) 
*/ 
#undef __LAYOUT_800_352                                    
 
/** #__LIGHTSURF  
Flag is used to incorporate the LightSurf Picture Messaging transport engine
into the release. 
*/ 
#undef __LIGHTSURF                                         
 
/** #__LOCATIONFRAMEWORKCORE  
Device supports location basic services.    Must always be supported due SDK
APIs. 
*/ 
#define __LOCATIONFRAMEWORKCORE                             
 
/** #__LOCATIONSYSUI  
Device has Location system application.  Must always be supported due SDK APIs. 
*/ 
#define __LOCATIONSYSUI                                     
 
/** #__LOCATIONVERIFIER  
Device has a location verifier module. 
*/ 
#undef __LOCATIONVERIFIER                                  
 
/** #__LOGGER_GPRS  
This flag defines whether Data Connection Logger component sets Attach Mode and
Default APN parameters to TSY at system boot. 
*/ 
#define __LOGGER_GPRS                                       
 
/** #__MANNER_MODE  
"The Manner Mode can SET/CANCEL the following settings at one time by simply
depressing the Manner Key.  ?Mute Ring tone?Vibration Ringer?Mute Key
Confirmation Tone?Boost Mic Sensitivity?Mute Low Power Alarm-Shutter sound must
not be mute" 
*/ 
#undef __MANNER_MODE                                       
 
/** #__MAP_AND_NAVIGATION_AIW_PROVIDER  
This flag is intended to toggle presence of Map and Navigation AIW provider in
ROM.  
*/ 
#define __MAP_AND_NAVIGATION_AIW_PROVIDER                   
 
/** #__MEDIATOR  
Mediator is a server that extends mechanisms of inter-process communication. It
supports creation of indirect interfaces for passing commands and events between
clients and easy transfer of large amounts of data. 
*/ 
#define __MEDIATOR                                          
 
/** #__MEETING_REQUEST_ENABLER  
This flag allows 3rd parties to implement their own meeting request solutions. 
*/ 
#define __MEETING_REQUEST_ENABLER                           
 
/** #__MEETING_REQUEST_SUPPORT  
Email and calendar support meeting request. 
*/ 
#undef __MEETING_REQUEST_SUPPORT                           
 
/** #__MIDLETAIFEXTENSIONS__  
Extends the CApaGenerator API to allow MIDlet to be registered as MIME type
handlers. 
*/ 
#undef __MIDLETAIFEXTENSIONS__                             
 
/** #__MIPV4  
Devices supports Mobile IPv4 
*/ 
#undef __MIPV4                                             
 
/** #__MIPV6  
Devices supports Mobile IPv6.  
*/ 
#undef __MIPV6                                             
 
/** #__MMC  
Device supports Multimedia Card (MMC). 
*/ 
#define __MMC                                               
 
/** #__MMCOMMSAVCONTROLLER  
Device supports Multimedia Comms Controller for OMA PoC. 
*/ 
#define __MMCOMMSAVCONTROLLER                               
 
/** #__MMCOMMSCONTROLLER  
Device supports Multimedia Comms Controller for VoIP. 
*/ 
#undef __MMCOMMSCONTROLLER                                 
 
/** #__MMCOMMSENGINE  
Device supports Multimedia Comms Engine for OMA PoC. 
*/ 
#define __MMCOMMSENGINE                                     
 
/** #__MMC_EJECT  
Device supports software based eject triggered from the options menu by the
user. 
*/ 
#define __MMC_EJECT                                         
 
/** #__MMC_HOTSWAP  
Device supports MMC hotswap. A MMC card can be inserted and removed from device
without removing battery or rebooting the device 
*/ 
#define __MMC_HOTSWAP                                       
 
/** #__MMC_LOCK  
Device supports locked (i.e. password protected) Multimedia cards. 
*/ 
#define __MMC_LOCK                                          
 
/** #__MMF_DRM_UTILITY  
Enables a utility for 3rd party applications to play DRM encrypted audio. 
*/ 
#define __MMF_DRM_UTILITY                                   
 
/** #__MMS  
Flag is used for inclusion or exclusion of components from the MMS UIs and MMS
Engine subsystems. 
*/ 
#define __MMS                                               
 
/** #__MMS_XID_HEADER_HTTP_FILTER  
Enables inclusion of custom http header on Mms Http Post and Get requests for
subscriber identification. 
*/ 
#undef __MMS_XID_HEADER_HTTP_FILTER                        
 
/** #__MOBILE_ACTIVE_SYNC  
This feature activates the Exchange Active Sync UI. 
*/ 
#define __MOBILE_ACTIVE_SYNC                                
 
/** #__MP3  
Device supports MP3 audio codec. 
*/ 
#define __MP3                                               
 
/** #__MROUTER  
Device uses Symbian MRrouter technology for PC connectivity.  If this feature is
on the alternative feature __SRCS shall be off. 
*/ 
#undef __MROUTER                                           
 
/** #__MULTIMEDIA_SHARING  
Multimedia Sharing application. 
*/ 
#define __MULTIMEDIA_SHARING                                
 
/** #__MULTIPLE_PROV_CTX  
"Device supports Multiple OMA Provisioning contexts. The feature allows the user
to choose which configuration context is currently ""active"" in order to
improve usability by reducing the number of detailed connectivity decisions and
processes involved with utilizing services." 
*/ 
#define __MULTIPLE_PROV_CTX                                 
 
/** #__NETWORK_REGISTRATION  
This flag defines whether network registration status including roaming
information is available from Connection Monitor server component. 
*/ 
#define __NETWORK_REGISTRATION                              
 
/** #__NOT_SUPPORTED_FEATURE1  
This feature will always be off (for testing purposes) 
*/ 
#undef __NOT_SUPPORTED_FEATURE1                            
 
/** #__NOT_SUPPORTED_FEATURE2  
This feature will always be off (for testing purposes) 
*/ 
#undef __NOT_SUPPORTED_FEATURE2                            
 
/** #__NO_OTA_CONFIGURATION  
Device does NOT support old OTA configuration which has been replaced by new OMA
Provisioning.  To keep compatibility with old mechanism you should set this off 
(#undef). 
*/ 
#undef __NO_OTA_CONFIGURATION                              
 
/** #__NP_PROXY  
Support for network based positioning methods. All PSYs that implement network
based positioning technology shall be hidden behind Network Positioning Proxy. 
*/ 
#define __NP_PROXY                                          
 
/** #__OCSP  
Device supports Online Certificate Status Protocol (OCSP). The protocol
specifies the syntax for communication between the server (which contains the
certificate status) and the client application (which is informed of that
status).  
*/ 
#define __OCSP                                              
 
/** #__OFFLINE_MODE  
Device suppors off-line mode. Device can be used off-line and Bluetooth
transmitter can be enabled.  RF transmitter can be activated only for emergency
calls.  
*/ 
#define __OFFLINE_MODE                                      
 
/** #__OMA_EMAIL_NOTIFICATIONS  
"The flag is used for image time variation of the OMA EMN watcher plugin that
receives the incoming OMA email notifications. Additionally,it would be used for
hiding the EMN functionality from the email settings. " 
*/ 
#define __OMA_EMAIL_NOTIFICATIONS                           
 
/** #__OMA_IMPS_12  
Support to OMA IMPS 1.1 and 1.2 protocols. 
*/ 
#define __OMA_IMPS_12                                       
 
/** #__OMA_IMPS_13  
Support to OMA IMPS 1.3 protocol. 
*/ 
#undef __OMA_IMPS_13                                       
 
/** #__OMA_PROV  
"Existing component OMA Provisioning needs to be variated because not all
platforms are intended to be used in GSM/UMTS networks, that support the
protocol well. For example CDMA network operators use different methods for
delivering phone settings. Especially from the 2.7 platform side, this kind of
variability has been requested." 
*/ 
#define __OMA_PROV                                          
 
/** #__OMA_SUPL_PLUGINS  
Device has OMA SUPL variant of SUPL Protocol Plug-in for Common SUPL Framework. 
*/ 
#define __OMA_SUPL_PLUGINS                                  
 
/** #__OPENVGHEADERS_USE_VG_1_1  
Enable OpenVG 1.1 API instead of the default one (1.0) 
*/ 
#define __OPENVGHEADERS_USE_VG_1_1                          
 
/** #__OPENVG_SW_IMPLEMENTATION  
"Device has a software implementation of OpenVG API. If no hardware support is
present, this flag should be enabled." 
*/ 
#define __OPENVG_SW_IMPLEMENTATION                          
 
/** #__PALETTE_INDEX_ADDRESS_FIXED  
"The flag tells whether the palette index address is defined with #define in
palette.cpp or calculated dynamically in run-time, which is slower." 
*/ 
#undef __PALETTE_INDEX_ADDRESS_FIXED                       
 
/** #__PHONE_HIDE_MO_DATACALL_NUMBER  
Phone application supports hiding CSD dial-up number. Applicable to devices
targeted to United States (US) markets 
*/ 
#undef __PHONE_HIDE_MO_DATACALL_NUMBER                     
 
/** #__PHONE_NUMBER_GROUPING  
"Device supports phone number grouping. Numbers shown in the display
(incoming/outgoing call, phone book, recent call lists) and in number editing
are grouped for easier readability (format: 1 234 567 8900). Applicable to
devices targeted to United States (US) markets. " 
*/ 
#undef __PHONE_NUMBER_GROUPING                             
 
/** #__PLUG_AND_PLAY_MOBILE_SERVICES  
Device supports Plug and Play Mobile Services. 
*/ 
#define __PLUG_AND_PLAY_MOBILE_SERVICES                     
 
/** #__PRESENCE_FRAMEWORK  
Presence Framework provides protocol agnostic presence handling services to S60
applications and subsystems. Concrete presence protocols are implemented as
plug-ins to Presence Framework. In long run protocol agnostic Presence Framework
replaces purely Wireless Village specific presence suppor controlled with
__PRESENCE flag. 
*/ 
#define __PRESENCE_FRAMEWORK                                
 
/** #__PRIVACYFRAMEWORK  
Device supports location privacy. It enables controlling end user privacy.  Must
always be supported due SDK APIs. 
*/ 
#define __PRIVACYFRAMEWORK                                  
 
/** #__PROTOCOL_CDMA  
Device supports CDMA cellular stack. 
*/ 
#undef __PROTOCOL_CDMA                                     
 
/** #__PROTOCOL_GSM  
Device supports GSM cellular stack. 
*/ 
#define __PROTOCOL_GSM                                      
 
/** #__PROTOCOL_TDMA  
Device supports TDMA cellular stack. 
*/ 
#undef __PROTOCOL_TDMA                                     
 
/** #__PUSH_WHITELIST  
Device supports authentication based on whitelist 
*/ 
#define __PUSH_WHITELIST                                    
 
/** #__QCELP  
Device supports QCELP 
*/ 
#undef __QCELP                                             
 
/** #__REAL_PLAYER_AS_DEFAULT  
Defines whether RealOne Player is system default player for certain MIME types.
Disabling this flag enables use of another media player. 
*/ 
#define __REAL_PLAYER_AS_DEFAULT                            
 
/** #__REMOTE_LOCK  
Device supports remote locking. 
*/ 
#define __REMOTE_LOCK                                       
 
/** #__REMOTE_STORAGE_FW  
"Flag enable RemoteStorage feature, access to shared file systems like file
shared and web servers." 
*/ 
#define __REMOTE_STORAGE_FW                                 
 
/** #__RESTRICTED_CALL_BARRING  
Enables a subset of call barring options to be displayed in GS. 
*/ 
#undef __RESTRICTED_CALL_BARRING                           
 
/** #__RESTRICTED_CALL_DIVERT  
Enables alternative call divert view and handling in GS. 
*/ 
#undef __RESTRICTED_CALL_DIVERT                            
 
/** #__RESTRICTED_VOICE_MAIL  
Device has restricted voice mail functionality (no voice mail number setting). 
*/ 
#undef __RESTRICTED_VOICE_MAIL                             
 
/** #__RFID  
Device supports Radio Frequency Identification (RFID) ticket information in
Wallet settings. 
*/ 
#undef __RFID                                              
 
/** #__ROM_HIDE_JERUSALEM  
"This flags controls whether Jerusalem or Tel Aviv appears in the common city
list. E.g. in Startup, GS or Clock application." 
*/ 
#define __ROM_HIDE_JERUSALEM                                
 
/** #__S60_  
Indicates that S60 release is built 
*/ 
#define __S60_                                              
 
/** #__S60_32__  
Indicates that S60 release 3.2  is built. 
*/ 
#undef __S60_32__                                          
 
/** #__S60_50__  
Indicates that S60 release 5.0  is built. 
*/ 
#define __S60_50__                                          
 
/** #__SAP_APPLICATION_MANAGEMENT  
Feature flag for Sync and Provisioning/Application management 
*/ 
#define __SAP_APPLICATION_MANAGEMENT                        
 
/** #__SAP_DEVICE_LOCK_ENHANCEMENTS  
Feature flag for Sync and Provisioning/Device Lock Enhancements 
*/ 
#define __SAP_DEVICE_LOCK_ENHANCEMENTS                      
 
/** #__SAP_EMBEDDED_LINK_ADAPTER  
Feature flag for Sync and Provisioning/Embedded Link adapter 
*/ 
#define __SAP_EMBEDDED_LINK_ADAPTER                         
 
/** #__SAP_IDLE_SOFTKEY_ADAPTER  
Feature flag for Sync and Provisioning/Idle Softkey adapter 
*/ 
#define __SAP_IDLE_SOFTKEY_ADAPTER                          
 
/** #__SAP_OPERATOR_LOGO_ADAPTER  
Feature flag for Sync and Provisioning/Operator logo adapter 
*/ 
#define __SAP_OPERATOR_LOGO_ADAPTER                         
 
/** #__SAP_POLICY_MANAGEMENT  
Feature flag for Sync and Provisioning/Policy management 
*/ 
#define __SAP_POLICY_MANAGEMENT                             
 
/** #__SAP_SCREENSAVER_ADAPTER  
Feature flag for Sync and Provisioning/Screensaver adapter 
*/ 
#define __SAP_SCREENSAVER_ADAPTER                           
 
/** #__SAP_STARTUP_ADAPTER  
Feature flag for Sync and Provisioning/Startup adapter 
*/ 
#define __SAP_STARTUP_ADAPTER                               
 
/** #__SAP_TERMINAL_CONTROL_FW  
Feature flag for Sync and Provisioning/Terminal control 
*/ 
#define __SAP_TERMINAL_CONTROL_FW                           
 
/** #__SAP_THEMES_ADAPTER  
Feature flag for Sync and Provisioning/Themes adapter 
*/ 
#define __SAP_THEMES_ADAPTER                                
 
/** #__SAP_UI_SETTING_SERVER  
Feature flag for Sync and Provisioning/UI settins server 
*/ 
#define __SAP_UI_SETTING_SERVER                             
 
/** #__SAP_WALLPAPER_ADAPTER  
Feature flag for Sync and Provisioning/Wallpaper adapter 
*/ 
#define __SAP_WALLPAPER_ADAPTER                             
 
/** #__SAT_BIP  
"This flag constitutes of five SAT commands: Open Channel, Close Channel, Send
Data, Receive Data, Channel Status. They implement the ""e"" class of SAT
commands and are related to Bearer Independent Protocol. When this flag is
enabled, these SAT commands are supported." 
*/ 
#define __SAT_BIP                                           
 
/** #__SAT_CALL_CONTROL  
"When this flag is enabled and call control service is activated by the SIM, all
dialled digit strings, supplementary service (SS) control strings and
unstructured supplementary data (USSD) strings are first passed to the SIM
before the ME sets up the call, the supplementary service operation or the USSD
operation." 
*/ 
#define __SAT_CALL_CONTROL                                  
 
/** #__SAT_DISPLAY_TEXT  
"If this flag is enabled, SIM can request ME to display a text message, and/or
an icon." 
*/ 
#define __SAT_DISPLAY_TEXT                                  
 
/** #__SAT_GET_INKEY  
"If this flag is enabled, SAT Get Inkey command instructs the ME to display text
and/or an icon and to expect the user to enter a single character. " 
*/ 
#define __SAT_GET_INKEY                                     
 
/** #__SAT_GET_INPUT  
"If this flag is enabled, SAT Get Input command instructs the ME to display text
and/or an icon and that any response string entered by the user shall be passed
transparently by the ME to the SIM and shall not be stored in the ME. " 
*/ 
#define __SAT_GET_INPUT                                     
 
/** #__SAT_LANGUAGE_NOTIFICATION  
"If this flag is enabled, the SIM shall use SAT Language Notification command to
notify the ME about the language currently used for any text string within
proactive commands or envelope command responses." 
*/ 
#define __SAT_LANGUAGE_NOTIFICATION                         
 
/** #__SAT_LAUNCH_BROWSER  
When this flag is enabled, upon receiving SAT Launch Browser command, the ME
shall decide if it is able to execute the command. See details from 3GPP
specifications. 
*/ 
#define __SAT_LAUNCH_BROWSER                                
 
/** #__SAT_MO_SM_CONTROL  
"When this flag is enabled, mobile originated short messages are controlled by
SIM." 
*/ 
#define __SAT_MO_SM_CONTROL                                 
 
/** #__SAT_PLAY_TONE  
"When this flag is enabled, SIM can instruct the ME to play an audio tone." 
*/ 
#define __SAT_PLAY_TONE                                     
 
/** #__SAT_PROVIDE_LOCAL_INFO  
"If this flag is enabled, SIM can request ME to provide current local
information to the SIM." 
*/ 
#define __SAT_PROVIDE_LOCAL_INFO                            
 
/** #__SAT_REFRESH  
"When this flag is enabled, clients of SAT Refresh API are enabled to be
notified of the changes to the SIM configuration that have occurred as the
result of a SIM application activity." 
*/ 
#define __SAT_REFRESH                                       
 
/** #__SAT_SELECT_ITEM  
"If this flag is enabled, the SIM shall supply a set of items to the ME from
which the user may choose one. " 
*/ 
#define __SAT_SELECT_ITEM                                   
 
/** #__SAT_SEND_DTMF  
"When this flag is enabled, SAT Send DTMF command requests the ME to send a Dual
Tone Multiple Frequency (DTMF) string after a call has been successfully
established either by the proactive command SET UP CALL or the user. " 
*/ 
#define __SAT_SEND_DTMF                                     
 
/** #__SAT_SEND_SM  
"When this flag is enabled, SMS commands may be sent by the SIM. See details
from 3GPP specification." 
*/ 
#define __SAT_SEND_SM                                       
 
/** #__SAT_SEND_SS  
"When this flag is enabled and SIM requests ME to send supplementary service
(SS) command, the ME shall decide if it is able to execute the command. See
details from 3GPP specification." 
*/ 
#define __SAT_SEND_SS                                       
 
/** #__SAT_SEND_USSD  
"When this flag is enabled and SIM requests ME to send unstructured
supplementary service data (USSD), the ME shall decide if it is able to execute
the command. See details from 3GPP specification." 
*/ 
#define __SAT_SEND_USSD                                     
 
/** #__SAT_SETUP_CALL  
"When this flag is enabled and SIM requests ME to set up a call, the ME shall
decide if it able to execute the command." 
*/ 
#define __SAT_SETUP_CALL                                    
 
/** #__SAT_SET_UP_EVENT_LIST  
"If this flag is enabled, the SIM shall supply a set of events. " 
*/ 
#define __SAT_SET_UP_EVENT_LIST                             
 
/** #__SAT_SET_UP_IDLE_MODE_TEXT  
"If this flag is enabled, the SIM shall supply a text string, which shall be
displayed by the ME as an idle mode text if the ME is able to do it. " 
*/ 
#define __SAT_SET_UP_IDLE_MODE_TEXT                         
 
/** #__SAT_SET_UP_MENU  
"When this flag is enabled, the SIM shall supply a set of menu items, which
shall be integrated with the menu system in order to give the user the
opportunity to choose one of these menu items at his own discretion." 
*/ 
#define __SAT_SET_UP_MENU                                   
 
/** #__SCALABLE_ICONS  
"Flag defines whether icons are taken from scalable icons directory or from
bitmap icon directory. In a 176*208 device it is better to use bitmap icons
instead of SVGT icons, for both performance and memory consumption reasons.And
also, avkon's bitmap icons are still needed in release 2.8 for compatibility
mode. (SDK applications may have loaded them directly via CFbsBitmap::Load)." 
*/ 
#define __SCALABLE_ICONS                                    
 
/** #__SEAMLESS_LINKS  
"Device support seamless links, i.e. application offer direct browser links to
download services applicable to the application." 
*/ 
#define __SEAMLESS_LINKS                                    
 
/** #__SECURE_HW  
Device supports secure HW that can be used through the Secure Environment API. 
*/ 
#undef __SECURE_HW                                         
 
/** #__SERIES60_  
Deprecated but included for compatibility reasons. Indicates that S60 release is
built. 
*/ 
#define __SERIES60_                                         
 
/** #__SERIES60_32__  
Deprecated but included for compatibility reasons. Indicates that S60 release
3.2  is built. 
*/ 
#undef __SERIES60_32__                                     
 
/** #__SERIES60_MIDI  
Device supports Musical Instrument Digital Interface (MIDI) sounds. 
*/ 
#define __SERIES60_MIDI                                     
 
/** #__SERIES60_MMC  
Deprecated flag. Included for compatibility reasons. Value must equal to __MMC. 
*/ 
#define __SERIES60_MMC                                      
 
/** #__SERIES60_PHONE_2DIGIT_DIAL  
Phone application supports 2 digit call number for dialing customer service
number. Applicable to devices targeted to United States (US) markets 
*/ 
#undef __SERIES60_PHONE_2DIGIT_DIAL                        
 
/** #__SERIES60_PHONE_CNAP  
Device supports Calling Name Presentation (CNAP) as defined in GSM 2.96. B
subscriber is able to see A subscriber's number and name even the caller's ID is
not stored in the phone. The name of the subscriber comes from network. 
*/ 
#define __SERIES60_PHONE_CNAP                               
 
/** #__SERIES60_PHONE_NUMBER_GROUPING  
Deprecated flag. Included for compatibility reasons. Value must equal to
__PHONE_NUMBER_GROUPING 
*/ 
#undef __SERIES60_PHONE_NUMBER_GROUPING                    
 
/** #__SERIES60_PUSH_SL  
Device supports WAP Push Service Loading (SL). When receiving the SL message the
terminal will automatically load content to client without user confirmation.
The SL together with SI (Service Indication) offer standard way of receiving
notifications of services in the Internet e.g news. 
*/ 
#define __SERIES60_PUSH_SL                                  
 
/** #__SERIES60_PUSH_SP  
Device support WAP Simple Push (SP).  The SP is a standard way of pushing
content into device e.g ringing tones. 
*/ 
#undef __SERIES60_PUSH_SP                                  
 
/** #__SERIES60_REAL_PLAYER  
Device has Real One Player application available 
*/ 
#define __SERIES60_REAL_PLAYER                              
 
/** #__SERIES60_SETTINGS_PROTECTION  
"Devices protects certain SW settings, like Internet access points. Operators
can preset the phones already in the factory so that later user is not able to
modify settings." 
*/ 
#define __SERIES60_SETTINGS_PROTECTION                      
 
/** #__SIMCARD  
"Device supports SIM card in the user interface applications, e.g. SMS
application. Applicable only to CDMA devices. Some CDMA carriers do not support
SIM Cards (and either R-UIM cards) such as Sprint." 
*/ 
#define __SIMCARD                                           
 
/** #__SIMPLE_LOGS  
"Device uses only ""simple"" logs (call logs only)" 
*/ 
#undef __SIMPLE_LOGS                                       
 
/** #__SIM_CERTIFICATES  
Device supports reading certificates from SIM. 
*/ 
#define __SIM_CERTIFICATES                                  
 
/** #__SIM_PHONEBOOK_MATCH  
Number matching from SIM. Feature enables the usage of SIM phonebook in addition
to Symbian Contacts database.  
*/ 
#define __SIM_PHONEBOOK_MATCH                               
 
/** #__SMARTMSG_SMS_BOOKMARK_RECEIVING  
Device supports the specified fine-tuning of Smart Messaging over SMS. 
*/ 
#define __SMARTMSG_SMS_BOOKMARK_RECEIVING                   
 
/** #__SMARTMSG_SMS_GMS_MESSAGE_RECEIVING  
Device supports the specified fine-tuning of Smart Messaging over SMS. 
*/ 
#define __SMARTMSG_SMS_GMS_MESSAGE_RECEIVING                
 
/** #__SMARTMSG_SMS_GMS_MESSAGE_SENDING_SUPPORTED   
Device supports the specified fine-tuning of Smart Messaging over SMS. 
*/ 
#undef __SMARTMSG_SMS_GMS_MESSAGE_SENDING_SUPPORTED        
 
/** #__SMARTMSG_SMS_IAP_SETTINGS_RECEIVING  
Device supports the specified fine-tuning of Smart Messaging over SMS. 
*/ 
#undef __SMARTMSG_SMS_IAP_SETTINGS_RECEIVING               
 
/** #__SMARTMSG_SMS_OPERATOR_LOGO_RECEIVING  
Device supports the specified fine-tuning of Smart Messaging over SMS. 
*/ 
#define __SMARTMSG_SMS_OPERATOR_LOGO_RECEIVING              
 
/** #__SMARTMSG_SMS_RINGING_TONE_RECEIVING  
Device supports the specified fine-tuning of Smart Messaging over SMS. 
*/ 
#define __SMARTMSG_SMS_RINGING_TONE_RECEIVING               
 
/** #__SMARTMSG_SMS_VCAL_RECEIVING  
Device supports the specified fine-tuning of Smart Messaging over SMS. 
*/ 
#define __SMARTMSG_SMS_VCAL_RECEIVING                       
 
/** #__SMARTMSG_SMS_VCAL_SENDING  
Device supports the specified fine-tuning of Smart Messaging over SMS. 
*/ 
#define __SMARTMSG_SMS_VCAL_SENDING                         
 
/** #__SMARTMSG_SMS_VCARD_RECEIVING  
Device supports the specified fine-tuning of Smart Messaging over SMS. 
*/ 
#define __SMARTMSG_SMS_VCARD_RECEIVING                      
 
/** #__SMARTMSG_SMS_VCARD_SENDING  
Device supports the specified fine-tuning of Smart Messaging over SMS. 
*/ 
#define __SMARTMSG_SMS_VCARD_SENDING                        
 
/** #__SMARTMSG_SMS_WAP_AP_RECEIVING  
Device supports the specified fine-tuning of Smart Messaging over SMS. 
*/ 
#undef __SMARTMSG_SMS_WAP_AP_RECEIVING                     
 
/** #__SMARTMSG_SMS_WV_SETTINGS_RECEIVING  
Device supports the specified fine-tuning of Smart Messaging over SMS. 
*/ 
#undef __SMARTMSG_SMS_WV_SETTINGS_RECEIVING                
 
/** #__SMART_CARD_PROV  
Device supports reading OMA Provisioning files from SIM/WIM. 
*/ 
#define __SMART_CARD_PROV                                   
 
/** #__SMIL_EDITOR  
"MMS editor supports slide set creation (MMS Conformant Document version 2.0.0
[2]). That allows end user to create a ?slide show? as a Multimedia Message (MM)
using a slide template. " 
*/ 
#define __SMIL_EDITOR                                       
 
/** #__SMIL_STREAMING  
Device supports streaming in SMIL content 
*/ 
#undef __SMIL_STREAMING                                    
 
/** #__SRCS  
Devices uses Short Range Connectivity Server technology for PC connectivity.  If
this feature is on the alternative feature __MROUTER shall be off 
*/ 
#define __SRCS                                              
 
/** #__SSO  
Device supports Single-Sign-On (SSO) feature (alias name is Mobile Personality
identify). The feature is used to make user authentication easier to end user
who is using e-commerce service via Wallet. 
*/ 
#undef __SSO                                               
 
/** #__SUPL_FRAMEWORK  
Device has Secure User Plane Location (SUPL) Framework. 
*/ 
#define __SUPL_FRAMEWORK                                    
 
/** #__SUPPORTED_FEATURE1  
This feature will always be on (for testing purposes) 
*/ 
#define __SUPPORTED_FEATURE1                                
 
/** #__SUPPORTED_FEATURE2  
This feature will always be on (for testing purposes) 
*/ 
#define __SUPPORTED_FEATURE2                                
 
/** #__SVGT  
Device supports Scalable Vector Graphics - Tiny (SVGT) file format. The feature
enables viewing 2D vector graphics animations specified by the W3C. 
*/ 
#define __SVGT                                              
 
/** #__SVGT_SCREENSAVER_PLUGIN  
SVG-T ScreenSaver is a ECOM plugin DLL based on the Netscape plugin API. This is
used by the screensaver application to support SVG Screensavers. 
*/ 
#define __SVGT_SCREENSAVER_PLUGIN                           
 
/** #__SYNCML_DM  
Device supports SyncML device management standard. This feature enables Over The
Air (OTA) administration of the device settings. 
*/ 
#define __SYNCML_DM                                         
 
/** #__SYNCML_DM_1_1_2  
SyncML protocol version  1.1.2 
*/ 
#undef __SYNCML_DM_1_1_2                                   
 
/** #__SYNCML_DM_DS  
Device supports configuring data synchronisation settings using the SyncML. 
*/ 
#define __SYNCML_DM_DS                                      
 
/** #__SYNCML_DM_EMAIL  
Device supports configuring Email settings using the SyncML. 
*/ 
#define __SYNCML_DM_EMAIL                                   
 
/** #__SYNCML_DM_IAP  
Device supports configuring Internet Access Points (IAP) using the SyncML. 
*/ 
#define __SYNCML_DM_IAP                                     
 
/** #__SYNCML_DM_MMS  
Device supports configuring MMS settings using the SyncML. 
*/ 
#define __SYNCML_DM_MMS                                     
 
/** #__SYNCML_DM_STREAMING  
Device supports configuring Streaming using SyncML. 
*/ 
#undef __SYNCML_DM_STREAMING                               
 
/** #__SYNCML_DS  
Device supports SyncML data synchronization standard. This feature enables Over
The Air (OTA) synchronisation of device data. 
*/ 
#define __SYNCML_DS                                         
 
/** #__SYNCML_DS_AIW_PROVIDER  
SyncML AIW provider provides menu items and commands for starting and editing
the settings of synchronization directly from PIM applications. 
*/ 
#define __SYNCML_DS_AIW_PROVIDER                            
 
/** #__SYNCML_DS_ALERT  
Device supports SyncML data synchronisation alert. This feature enables
triggering data synchronisation via the alert sent by SyncML server. 
*/ 
#define __SYNCML_DS_ALERT                                   
 
/** #__SYNCML_DS_CAL  
Device supports calendar data synchronization using the SyncML. 
*/ 
#define __SYNCML_DS_CAL                                     
 
/** #__SYNCML_DS_CON  
Device supports contacts data synchronization using the SyncML. 
*/ 
#define __SYNCML_DS_CON                                     
 
/** #__SYNCML_DS_EMAIL  
Device supports Email data synchronization using the SyncML. 
*/ 
#define __SYNCML_DS_EMAIL                                   
 
/** #__SYNCML_DS_EMAIL_FILTERING  
Device supports filtering of Email data in  SyncML synchronization. 
*/ 
#undef __SYNCML_DS_EMAIL_FILTERING                         
 
/** #__SYNCML_DS_OVER_HTTP  
Device supports data synchronization over HTTP. 
*/ 
#define __SYNCML_DS_OVER_HTTP                               
 
/** #__SYNCML_OBEX  
Device supports SyncML over OBEX. This feature enables device management and
data synchronisation over local connectivity. 
*/ 
#define __SYNCML_OBEX                                       
 
/** #__TELEPHONY_SERVICE  
This flag is used when telephony service provides its functionality also to
external subsystems. 
*/ 
#undef __TELEPHONY_SERVICE                                 
 
/** #__UI_TRANSITION_EFFECTS  
Defines whether transition effects are used in UI. Also controls whether the
effect engine is included in ROM or not. 
*/ 
#define __UI_TRANSITION_EFFECTS                             
 
/** #__UI_ZOOM  
This feature activates the zooming support in Series 60 UI. 
*/ 
#define __UI_ZOOM                                           
 
/** #__UPIN  
Enables UPIN functionality. 
*/ 
#define __UPIN                                              
 
/** #__USB  
Device supports Universal Serial Bus (USB). 
*/ 
#define __USB                                               
 
/** #__USB_DEVICE_LOCK  
Device supports USB device lock functionality. 
*/ 
#define __USB_DEVICE_LOCK                                   
 
/** #__USB_MULTIPERSONALITY  
Enables multipersonality support in USB 
*/ 
#define __USB_MULTIPERSONALITY                              
 
/** #__USB_PICTBRIDGE  
Includes and excludes components used in PictBridge printing. 
*/ 
#define __USB_PICTBRIDGE                                    
 
/** #__USB_PICTBRIDGE_UI  
Includes and excludes UI components used in PictBridge printing 
*/ 
#undef __USB_PICTBRIDGE_UI                                 
 
/** #__USB_PTP  
Includes and excludes PTP (Picture Transfer Protocol) components. 
*/ 
#undef __USB_PTP                                           
 
/** #__USB_REMOTE_PERSONALITY  
Includes and excludes S60 USB Remote Personality component. 
*/ 
#define __USB_REMOTE_PERSONALITY                            
 
/** #__USB_STREAMING  
Video telephony requires USB camera connection. USB streaming interface provides
fast USB data transfer and control interface for imaging componet using the
camera. 
*/ 
#undef __USB_STREAMING                                     
 
/** #__USER_CONFIGURABLE_USSD_MENU  
Device supports user-configurable USSD menu. 
*/ 
#undef __USER_CONFIGURABLE_USSD_MENU                       
 
/** #__USE_DRMENGINE_IN_CCP  
Device uses DRM in closed content policy which prevents sending that content out
of device which has the configured MIME type.  
*/ 
#define __USE_DRMENGINE_IN_CCP                              
 
/** #__USSD  
Device supports Unstructured Suppelementary Service Data (USSB). 
*/ 
#define __USSD                                              
 
/** #__VIDEO_MENU  
Support for Video services application. Used in deciding whether the video
services application  is taken in. 
*/ 
#define __VIDEO_MENU                                        
 
/** #__VOIP  
VoIP is enabled in terminal when this flag is enabled. 
*/ 
#define __VOIP                                              
 
/** #__WALLET  
"Device supports Wallet core functionality (Generic ECML Cards, Personal Notes
and Access code)" 
*/ 
#undef __WALLET                                            
 
/** #__WIM  
Device supports WAP Wireless Identification Module (WIM). 
*/ 
#define __WIM                                               
 
/** #__WINDOWS_MEDIA  
Device supports Windows Media. In other words it indicates whether WM-related
components such as ASF-parser and codecs are in place. 
*/ 
#define __WINDOWS_MEDIA                                     
 
/** #__WINDOWS_MEDIA_DRM  
Device supports Windows Media DRM. In other words it indicates whether WMDRM
related components such as WMDRM MTP plugin and WMDRM PK are in place. 
*/ 
#define __WINDOWS_MEDIA_DRM                                 
 
/** #__WSP  
Device uses WAP WSP protocol for browsing instead of the default HTTP protocol. 
*/ 
#undef __WSP                                               
 
/** #__XSP_EXTENSION_MANAGER  
"xSP Extension Manager is API on top of the Phonebook2 UI Extension API to
manage multiple xSP extensions and provide additional functionality (e.g.
Sorting of xSP tabs, Accessing certain xSP view from external application and
showing it to user)." 
*/ 
#define __XSP_EXTENSION_MANAGER                             
 

#endif // __BLDPRIVATE_HRH
